[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Homepage = "https://codspeed.io/"
Documentation = "https://docs.codspeed.io/"
Source = "https://github.com/CodSpeedHQ/pytest-codspeed"

[project]
name = "pytest-codspeed"
dynamic = ["version"]
description = "Pytest plugin to create CodSpeed benchmarks"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
authors = [{ name = "Arthur Pastel", email = "arthur@codspeed.io" }]
keywords = ["codspeed", "benchmark", "performance", "pytest"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Benchmark",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = ["cffi ~= 1.15.1", "pytest>=3.8"]

[project.optional-dependencies]
dev = [
    "hatchling ~= 1.11.1",
    "black ~= 22.3.0",
    "isort ~=5.8.0",
    "flake8 ~= 5.0.4",
    "mypy ~= 0.961",
    "pytest ~= 7.0",
    "pytest-cov ~= 4.0.0",
    "ruff ~= 0.0.100",
]
compatibility = ["pytest-benchmarks ~= 3.4.1"]

[project.entry-points]
pytest11 = { codspeed = "pytest_codspeed.plugin" }

[tool.hatch.version]
path = "src/pytest_codspeed/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.ruff]
line-length = 88

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
force_grid_wrap = 0
float_to_top = true

[tool.coverage.run]
branch = true
[tool.coverage.report]
include = ["src/*", "tests/*"]
omit = ["**/conftest.py"]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@pytest.mark.skip",
    "@abstractmethod",
]
