interactions:
- request:
    body: username=mastodonpy_test_2%40localhost%3A3000&password=5fc638e0e53eafd9c4145b6bb852667d&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&grant_type=password&client_id=__MASTODON_PY_TEST_CLIENT_ID&client_secret=__MASTODON_PY_TEST_CLIENT_SECRET&scope=read+write+follow+push
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '271'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: POST
    uri: http://localhost:3000/oauth/token
  response:
    body:
      string: '{"access_token":"__MASTODON_PY_TEST_ACCESS_TOKEN_3","token_type":"Bearer","scope":"read
        write follow push","created_at":1669931178}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-3Sb5WZL4NSRklf6CZcNCVw=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"2850b9ad9c8cf74cd8203359b06d9613"
      Pragma:
      - no-cache
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - bd7e21af-899c-48e2-a410-5f2c72199563
      X-Runtime:
      - '0.042110'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN_3
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/instance/
  response:
    body:
      string: '{"uri":"localhost:3000","title":"Mastodon","short_description":"","description":"","email":"","version":"4.0.2","urls":{"streaming_api":"ws://localhost:4000"},"stats":{"user_count":4,"status_count":1,"domain_count":1},"thumbnail":"http://localhost:3000/packs/media/images/preview-6399aebd96ccf025654e2977454f168f.png","languages":["en"],"registrations":true,"approval_required":false,"invites_enabled":true,"configuration":{"accounts":{"max_featured_tags":10},"statuses":{"max_characters":500,"max_media_attachments":4,"characters_reserved_per_url":23},"media_attachments":{"supported_mime_types":["image/jpeg","image/png","image/gif","image/heic","image/heif","image/webp","image/avif","video/webm","video/mp4","video/quicktime","video/ogg","audio/wave","audio/wav","audio/x-wav","audio/x-pn-wave","audio/vnd.wave","audio/ogg","audio/vorbis","audio/mpeg","audio/mp3","audio/webm","audio/flac","audio/aac","audio/m4a","audio/x-m4a","audio/mp4","audio/3gpp","video/x-ms-asf"],"image_size_limit":10485760,"image_matrix_limit":16777216,"video_size_limit":41943040,"video_frame_rate_limit":60,"video_matrix_limit":2304000},"polls":{"max_options":4,"max_characters_per_option":50,"min_expiration":300,"max_expiration":2629746}},"contact_account":null,"rules":[]}'
    headers:
      Cache-Control:
      - max-age=180, public
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-xcGHkD7UOR7wqw2K+icoLA=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Thu, 01 Dec 2022 19:47:08 GMT
      ETag:
      - W/"f3d8b9e0e7a52fd79c73f5f6ac26b4dd"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - abc4f49a-cad0-40b0-9fc4-1e3f16c907fa
      X-Runtime:
      - '0.015154'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: client_id=__MASTODON_PY_TEST_CLIENT_ID&client_secret=__MASTODON_PY_TEST_CLIENT_SECRET&token=__MASTODON_PY_TEST_ACCESS_TOKEN_3
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN_3
      Connection:
      - keep-alive
      Content-Length:
      - '125'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: POST
    uri: http://localhost:3000/oauth/revoke
  response:
    body:
      string: '{}'
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-G+geC397EcwLWta4fZyMMg=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"44136fa355b3678a1146ad16f7e8649e"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - ec989dea-f032-4d8c-be5c-de1b3e882643
      X-Runtime:
      - '0.016103'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: status=illegal+access+detected
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: POST
    uri: http://localhost:3000/api/v1/statuses
  response:
    body:
      string: '{"error":"The access token is invalid"}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-Ie2rw6KLp6JG3wxgaX6CoQ=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      Pragma:
      - no-cache
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      WWW-Authenticate:
      - Bearer realm="Doorkeeper", error="invalid_token", error_description="The access
        token is invalid"
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 2011fa5f-7664-4101-bf57-f2049722453e
      X-Runtime:
      - '0.006893'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 401
      message: Unauthorized
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN_3
      Connection:
      - keep-alive
      User-Agent:
      - mastodonpy
    method: GET
    uri: http://localhost:3000/api/v1/instance/
  response:
    body:
      string: '{"uri":"localhost:3000","title":"Mastodon","short_description":"","description":"","email":"","version":"4.0.2","urls":{"streaming_api":"ws://localhost:4000"},"stats":{"user_count":4,"status_count":1,"domain_count":1},"thumbnail":"http://localhost:3000/packs/media/images/preview-6399aebd96ccf025654e2977454f168f.png","languages":["en"],"registrations":true,"approval_required":false,"invites_enabled":true,"configuration":{"accounts":{"max_featured_tags":10},"statuses":{"max_characters":500,"max_media_attachments":4,"characters_reserved_per_url":23},"media_attachments":{"supported_mime_types":["image/jpeg","image/png","image/gif","image/heic","image/heif","image/webp","image/avif","video/webm","video/mp4","video/quicktime","video/ogg","audio/wave","audio/wav","audio/x-wav","audio/x-pn-wave","audio/vnd.wave","audio/ogg","audio/vorbis","audio/mpeg","audio/mp3","audio/webm","audio/flac","audio/aac","audio/m4a","audio/x-m4a","audio/mp4","audio/3gpp","video/x-ms-asf"],"image_size_limit":10485760,"image_matrix_limit":16777216,"video_size_limit":41943040,"video_frame_rate_limit":60,"video_matrix_limit":2304000},"polls":{"max_options":4,"max_characters_per_option":50,"min_expiration":300,"max_expiration":2629746}},"contact_account":null,"rules":[]}'
    headers:
      Cache-Control:
      - max-age=180, public
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-ofg9aAL+8mXZkW6++AXilw=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Thu, 01 Dec 2022 19:47:08 GMT
      ETag:
      - W/"f3d8b9e0e7a52fd79c73f5f6ac26b4dd"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 347f20e0-6729-43dc-aa4e-92fb8481a1a6
      X-Runtime:
      - '0.015039'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: status=illegal+access+detected
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN_3
      Connection:
      - keep-alive
      Content-Length:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - mastodonpy
    method: POST
    uri: http://localhost:3000/api/v1/statuses
  response:
    body:
      string: "{\"error\":\"\u30A2\u30AF\u30BB\u30B9\u30C8\u30FC\u30AF\u30F3\u306F\u53D6\u308A\u6D88\u3055\u308C\u3066\u3044\u307E\u3059\"}"
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-O2tqQHyvfWdyyC4c9P2C0A=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      Pragma:
      - no-cache
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      WWW-Authenticate:
      - "Bearer realm=\"Doorkeeper\", error=\"invalid_token\", error_description=\"\xE3\x82\xA2\xE3\x82\xAF\xE3\x82\xBB\xE3\x82\xB9\xE3\x83\x88\xE3\x83\xBC\xE3\x82\xAF\xE3\x83\xB3\xE3\x81\xAF\xE5\x8F\x96\xE3\x82\x8A\xE6\xB6\x88\xE3\x81\x95\xE3\x82\x8C\xE3\x81\xA6\xE3\x81\x84\xE3\x81\xBE\xE3\x81\x99\""
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 1c7a30ea-f644-4695-96d8-e3765290f27f
      X-Runtime:
      - '0.007280'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 401
      message: Unauthorized
version: 1
