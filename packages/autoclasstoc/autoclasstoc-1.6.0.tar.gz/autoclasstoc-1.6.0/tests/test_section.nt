test_section_predicate:
  # These predicates are evaluated in the context of the `MockObj` class 
  # defined in the test script.
  -
    id: section
    section:
      > class MockSection(Section):
      >     pass
    expected:
      - data_attr
      - method
      - _private_data_attr
      - _private_method
      - __special_attr__
      - __special_method__
      - InnerClass
      - _PrivateInnerClass
  -
    id: section-exclude-pattern
    section:
      > class MockSection(Section):
      >     exclude_pattern = '_'
    expected:
      - data_attr
      - method
      - InnerClass
  -
    id: section-exclude-patterns
    section:
      > class MockSection(Section):
      >     exclude_pattern = ['_', 'Inner']
    expected:
      - data_attr
      - method
  -
    id: section-exclude-class
    section:
      > class MockSection(Section):
      >     exclude_section = InnerClasses
    expected:
      - data_attr
      - method
      - _private_data_attr
      - _private_method
      - __special_attr__
      - __special_method__
  -
    id: section-exclude-classes
    section:
      > class MockSection(Section):
      >     exclude_section = [InnerClasses, PublicMethods]
    expected:
      - data_attr
      - _private_data_attr
      - _private_method
      - __special_attr__
  -
    id: public-methods
    section: MockSection = PublicMethods
    expected:
      - method
      - __special_method__
  -
    id: public-methods-without-dunders
    section: MockSection = PublicMethodsWithoutDunders
    expected:
      - method
  -
    id: private-methods
    section: MockSection = PrivateMethods
    expected:
      - _private_method
  -
    id: public-data-attrs
    section: MockSection = PublicDataAttrs
    expected:
      - data_attr
  -
    id: private-data-attrs
    section: MockSection = PrivateDataAttrs
    expected:
      - _private_data_attr
  -
    id: inner-classes
    section: MockSection = InnerClasses
    expected:
      - InnerClass
      - _PrivateInnerClass
  -
    id: metadata
    section:
      > class MockSection(Section):
      >     def predicate(self, name, attr, meta):
      >         return meta.get('include') == 'yes'
    obj:
      > class MockObj:
      >     def include(self):
      >         ":meta include: yes"
      >     def exclude(self):
      >         ":meta include: no"
    expected:
      - include
