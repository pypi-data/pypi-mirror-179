[build-system]
requires = ["hatchling>=1.4", "jupyter_client>=6"]
build-backend = "hatchling.build"

[project]
name = "ipykernel"
dynamic = ["version"]
authors = [{name = "IPython Development Team", email = "ipython-dev@scipy.org"}]
license = {file = "COPYING.md"}
readme = "README.md"
description = "IPython Kernel for Jupyter"
keywords = ["Interactive", "Interpreter", "Shell", "Web"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
urls = {Homepage = "https://ipython.org"}
requires-python = ">=3.8"
dependencies = [
    "debugpy>=1.0",
    "ipython>=7.23.1",
    "comm>=0.1",
    "traitlets>=5.1.0",
    "jupyter_client>=6.1.12",
    "tornado>=6.1",
    "matplotlib-inline>=0.1",
    'appnope;platform_system=="Darwin"',
    "pyzmq>=17",
    "psutil",
    "nest_asyncio",
    "packaging",
]

[project.optional-dependencies]
docs = [
  "sphinx",
  "myst_parser",
  "pydata_sphinx_theme",
  "sphinxcontrib_github_alt"
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "flaky",
    "ipyparallel",
    "pre-commit",
    "pytest-asyncio",
    "pytest-timeout"
]
cov = [
  "coverage[toml]",
  "pytest-cov",
  "matplotlib",
  "curio",
  "trio",
]

[tool.hatch.version]
path = "ipykernel/_version.py"

# Used to call hatch_build.py
[tool.hatch.build.hooks.custom]

[tool.hatch.build.targets.wheel.shared-data]
"data_kernelspec" = "share/jupyter/kernels/python3"

[tool.hatch.build.force-include]
"./ipykernel_launcher.py" = "ipykernel_launcher.py"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test", "cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov ipykernel --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules --ignore=ipykernel/pylab/backend_inline.py --ignore=ipykernel/pylab/config.py --ignore=ipykernel/gui/gtk3embed.py --ignore=ipykernel/gui/gtkembed.py --ignore=ipykernel/datapub.py --ignore=ipykernel/log.py --ignore=ipykernel/pickleutil.py --ignore=ipykernel/serialize.py --ignore=ipykernel/_eventloop_macos.py"
testpaths = [
    "ipykernel/tests",
    "ipykernel/inprocess/tests"
]
asyncio_mode = "auto"
timeout = 300
# Restore this setting to debug failures
#timeout_method = "thread"
filterwarnings= [
  # Fail on warnings
  "error",

  # Ignore our own warnings
  "ignore:The `stream` parameter of `getpass.getpass` will have no effect:UserWarning",
  "ignore:has moved to ipyparallel:DeprecationWarning",

  # IPython warnings
  "ignore: `Completer.complete` is pending deprecation since IPython 6.0 and will be replaced by `Completer.completions`:PendingDeprecationWarning",

  # Ignore jupyter_client warnings
  "ignore:unclosed <socket.socket:ResourceWarning",
  "ignore:unclosed event loop:ResourceWarning",
  "ignore:There is no current event loop:DeprecationWarning",
  "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.coverage.run]
omit = [
  "ipykernel/tests/*",
  "ipykernel/datapub.py",
  "ipykernel/debugger.py",
  "ipykernel/eventloops.py",
  "ipykernel/log.py",
  "ipykernel/pickleutil.py",
  "ipykernel/serialize.py",
  "ipykernel/inprocess/tests/*",
  "ipykernel/gui/*",
  "ipykernel/pylab/*",
]

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
    "setup.py",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "ipykernel/tests/*: B011", "F841",
]
