Metadata-Version: 2.1
Name: zenoml
Version: 0.2.5
Summary: Interactive Evaluation Framework for Machine Learning
Home-page: https://zenoml.com
License: MIT
Keywords: ml,testing,evaluation,machine learning,ai
Author: Ángel Alexander Cabrera
Author-email: alex.cabrera@gmail.com
Requires-Python: >=3.8,<3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: fastapi (>=0.75,<0.89)
Requires-Dist: nest-asyncio (>=1.5.6,<2.0.0)
Requires-Dist: pandas (>=1.4.0,<2.0.0)
Requires-Dist: pathos (>=0.3.0,<0.4.0)
Requires-Dist: requests (>=2.28.1,<3.0.0)
Requires-Dist: scikit-learn (>=1.1.2,<2.0.0)
Requires-Dist: setuptools (>=65.5.1,<66.0.0)
Requires-Dist: tomli (>=2.0.1,<3.0.0)
Requires-Dist: tqdm (>=4.64.0,<5.0.0)
Requires-Dist: types-setuptools (>=65.4.0,<66.0.0)
Requires-Dist: uvicorn (>=0.17.5,<0.20.0)
Requires-Dist: websockets (>=10.2,<11.0)
Project-URL: Repository, https://github.com/zeno-ml/zeno
Description-Content-Type: text/markdown

<img src="./frontend/public/zeno.png" width="400px"/>

[![PyPI version](https://badge.fury.io/py/zenoml.svg)](https://badge.fury.io/py/zenoml)
![Github Actions CI tests](https://github.com/zeno-ml/zeno/actions/workflows/test.yml/badge.svg)
![Github Actions Docs build](https://github.com/zeno-ml/zenoml.com/actions/workflows/docs.yml/badge.svg)
[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/) [![Join the chat at https://gitter.im/zeno-ml-eval/community](https://badges.gitter.im/zeno-ml-eval/community.svg)](https://gitter.im/zeno-ml-eval/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

Zeno is a general-purpose framework for evaluating machine learning models.
It combines a **Python API** with an **interactive UI** to allow users to discover, explore, and analyze the performance of their models across diverse use cases.
Zeno can be used for any data type or task with _modular views_ for everything from object detection to audio transcription.

## Getting Started

Check out the quickstart tutorial and API reference to get started with Zeno:

- [Introduction](http://zenoml.com/docs/intro/) - Learn more about Zeno.
- [Getting Started](http://zenoml.com/docs/intro/get_started) - Setup Zeno with your own data and models.
- [CIFAR-10 Example](http://zenoml.com/docs/intro/cifar) - Learn how to use Zeno with a CIFAR-10 classification example.
- [Documentation & API](http://zenoml.com/docs/intro/) - Full documentation and API reference.

