# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/examples/tst.complex_dummy_experiment_manager.ipynb (unless otherwise specified).

__all__ = ['test_complex_dummy_experiment_manager']

# Cell
import pytest
import pandas as pd
import os
import joblib
from IPython.display import display
from dsblocks.utils.nbdev_utils import md

from hpsearch.examples.complex_dummy_experiment_manager import *
from hpsearch.examples.dummy_experiment_manager import generate_data
from hpsearch.utils.experiment_utils import read_df, write_df

# Comes from complex_dummy_experiment_manager.ipynb, cell
def test_complex_dummy_experiment_manager ():
    #em = generate_data ('complex_dummy_experiment_manager')

    md (
'''
Extend previous experiment by using a larger number of epochs

We see how to create a experiment that is the same as a previous experiment,
only increasing the number of epochs.

1.a. For test purposes, we first run the full number of epochs, 30, take note of the accuracy,
and remove the experiment
'''
    )

    em = ComplexDummyExperimentManager (path_experiments='test_complex_dummy_experiment_manager',
                                        verbose=0, name_epoch='epochs')
    em.create_experiment_and_run (parameters = {'epochs': 30});
    reference_accuracy = em.model.accuracy
    reference_weight = em.model.weight

    from hpsearch.config.hpconfig import get_path_experiments
    import os
    import pandas as pd

    path_experiments = get_path_experiments ()
    print (f'experiments folders: {os.listdir(f"{path_experiments}/experiments")}\n')

    experiments_data = read_df (path_experiments)
    print ('csv data')
    display (experiments_data)

    md ('we plot the history')
    from hpsearch.visualization.experiment_visualization import plot_multiple_histories

    plot_multiple_histories ([0], run_number=0, op='max', backend='matplotlib', metrics='validation_accuracy')

    md ('1.b. Now we run two experiments: ')

    md ('We run the first experiment  with 20 epochs:')

    # a.- remove previous experiment
    em.remove_previous_experiments ()

    # b.- create first experiment with epochs=20
    em.create_experiment_and_run (parameters = {'epochs': 20});

    print (f'experiments folders: {os.listdir(f"{path_experiments}/experiments")}\n')

    experiments_data = read_df (path_experiments)
    print ('csv data')
    display(experiments_data)
    print (f'weight: {em.model.weight}, accuracy: {em.model.accuracy}')

    md ('We run the second experiment resumes from the previous one and increases the epochs to 30')
    # 4.- create second experiment with epochs=10
    em.create_experiment_and_run (parameters = {'epochs': 30},
                                  prev_epoch=True, previous_model_file_name='model_weights.pk');

    experiments_data = read_df (path_experiments)
    print ('csv data')
    display(experiments_data)

    new_accuracy = em.model.accuracy
    new_weight = em.model.weight

    assert new_weight==reference_weight
    assert new_accuracy==reference_accuracy

    print (f'weight: {new_weight}, accuracy: {new_accuracy}')

    md ('We plot the history')
    plot_multiple_histories ([1], run_number=0, op='max', backend='matplotlib', metrics='validation_accuracy')

    em.remove_previous_experiments ()