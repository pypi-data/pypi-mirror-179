# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/tools/tst.copy_experiment.ipynb (unless otherwise specified).

__all__ = ['test_copy_content_and_code', 'test_copy_code_with_experiment_paths', 'test_parse_arguments_copy_experiment']

# Cell
import pytest
import pandas as pd
import os
import joblib
from IPython.display import display
from dsblocks.utils.nbdev_utils import md
import shutil

from hpsearch.tools.copy_experiment import *
from hpsearch.examples.complex_dummy_experiment_manager import generate_data, init_em
import hpsearch.config.hp_defaults as dflt

# Comes from copy_experiment.ipynb, cell
def test_copy_content_and_code ():
    em = generate_data ('copy_experiment_contents')

    # function
    copy_experiment_contents_and_code (
        experiment=2, content='test_dest_folder_copy_exp_content',
        code='test_my_code', run=0, file='test_file.py',
        manager_path=em.manager_path
    )
    content_list = sorted(os.listdir ('test_dest_folder_copy_exp_content'))
    expected_list = ['dict_results.pk', 'experiment.log',
                          'model_history.pk', 'model_weights.pk', 'parameters.json',
                          'parameters.pk', 'parameters.txt', 'separate_parameters.pk',
                          'summary.txt', 'test_experiment_manager.py']
    expected_list2 = ['dict_results.pk', 'dummy_experiment_manager.py', 'experiment.log',
                          'model_history.pk', 'model_weights.pk', 'parameters.json',
                          'parameters.pk', 'parameters.txt', 'separate_parameters.pk',
                          'summary.txt']
    assert content_list==expected_list or content_list==expected_list2

    shutil.rmtree ('test_dest_folder_copy_exp_content')
    copy_experiment_contents_and_code (
        experiment=2, content='test_dest_folder_copy_exp_content',
        code='test_my_code', run=0, file='test_file.py',
        target_model='model_weights.pk', destination_model='nn_model.pk',
        manager_path=em.manager_path
    )

    content_list = sorted(os.listdir ('test_dest_folder_copy_exp_content'))

    expected_list = [
        'dict_results.pk', 'experiment.log', 'model_history.pk',
        'model_weights.pk', 'nn_model.pk', 'parameters.json',
        'parameters.pk', 'parameters.txt', 'separate_parameters.pk',
        'summary.txt', 'test_experiment_manager.py']

    expected_list2 = [
        'dict_results.pk', 'dummy_experiment_manager.py', 'experiment.log', 'model_history.pk',
        'model_weights.pk', 'nn_model.pk', 'parameters.json',
        'parameters.pk', 'parameters.txt', 'separate_parameters.pk',
        'summary.txt']
    assert content_list==expected_list or content_list==expected_list2

    # checks
    assert os.listdir ('test_my_code')==['test_file.py']
    f = open (f'test_my_code/test_file.py', 'rt')
    text = f.read()
    f.close()
    assert 'ExperimentManager ()' in text
    assert 'parameters=dict(epochs=5,' in text
    assert 'em = ComplexDummyExperimentManager ()' in text

    shutil.rmtree ('test_my_code')
    shutil.rmtree ('test_dest_folder_copy_exp_content')
    em.remove_previous_experiments (parent=True)

# Comes from copy_experiment.ipynb, cell
def test_copy_code_with_experiment_paths ():
    em = generate_data ('copy_code_with_experiment_paths')

    # function
    copy_code_with_experiment_paths (experiment=2,
                                     destination_folder='test_dest_folder_copy_exp',
                                     file='test_file.py', run=0,
                                     manager_path=em.manager_path)

    # checks
    assert os.listdir ('test_dest_folder_copy_exp')==['test_file.py']
    f = open (f'test_dest_folder_copy_exp/test_file.py', 'rt')
    text = f.read()
    f.close()
    assert 'ExperimentManager ()' in text
    assert 'parameters=dict(epochs=5,' in text
    assert 'em = ComplexDummyExperimentManager ()' in text

    em.remove_previous_experiments (parent=True)
    shutil.rmtree ('test_dest_folder_copy_exp')

# Comes from copy_experiment.ipynb, cell
def test_parse_arguments_copy_experiment ():
    em = generate_data ('parse_arguments_copy_experiment', folder='new_folder')

    df = em.get_experiment_data ()
    assert df.shape==(9,29)

    args = ('-e 2 --content test_dest_folder_copy_exp_content '
           f'--run 1 --file test_file.py --code test_my_code -p {em.manager_path}')
    desired = {'path_results':
               'test_parse_arguments_copy_experiment/new_folder/experiments/00002/1'}
    parse_arguments_and_run (args.split (), desired=desired)

    content_list = sorted(os.listdir ('test_dest_folder_copy_exp_content'))
    expected_list1 = [
         'dict_results.pk',
         'experiment.log',
         'model_history.pk',
         'model_weights.pk',
         'parameters.json',
         'parameters.pk',
         'parameters.txt',
         'separate_parameters.pk',
         'summary.txt',
         'test_experiment_manager.py']
    expected_list2 = [
         'dict_results.pk',
         'dummy_experiment_manager.py',
         'experiment.log',
         'model_history.pk',
         'model_weights.pk',
         'parameters.json',
         'parameters.pk',
         'parameters.txt',
         'separate_parameters.pk',
         'summary.txt']

    assert (content_list == expected_list1) or (content_list == expected_list2)

    # checks
    assert os.listdir ('test_my_code')==['test_file.py']
    f = open (f'test_my_code/test_file.py', 'rt')
    text = f.read()
    f.close()
    assert 'ExperimentManager ()' in text
    assert 'parameters=dict(epochs=5,' in text
    assert 'em = ComplexDummyExperimentManager ()' in text

    shutil.rmtree ('test_my_code')
    shutil.rmtree ('test_dest_folder_copy_exp_content')
    em.remove_previous_experiments (parent=True)