# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/utils/tst.organize_experiments.ipynb (unless otherwise specified).

__all__ = ['test_remove_experiments']

# Cell
import pytest
import pandas as pd
import os
import joblib
import shutil
from IPython.display import display

from dsblocks.utils.nbdev_utils import md
from dsblocks.utils.utils import remove_previous_results

from hpsearch.utils.organize_experiments import *
from hpsearch.examples.dummy_experiment_manager import generate_data
from hpsearch.config.hpconfig import get_path_experiments
from hpsearch.utils.experiment_utils import read_df, write_df

# Comes from organize_experiments.ipynb, cell
def test_remove_experiments ():
    em = generate_data ('remove_experiments')
    shutil.copytree ('test_remove_experiments', 'test_alternative_remove_experiments')
    em.set_alternative_path (alternative_parent_path='test_alternative_remove_experiments')
    path_experiments = em.path_experiments
    print (f'path_experiments: {path_experiments}\n')
    print (f'experiments content: {os.listdir(path_experiments)}\n')
    print (f'experiments inside: {os.listdir(f"{path_experiments}/experiments")}\n')

    experiments_data = read_df (path_experiments)
    old_experiments_data = experiments_data
    print (f'csv data index {experiments_data.index}\n')
    print ('csv content:')

    remove_experiments (experiments=[3,7], rename_experiments=True)

    # we check that the remaining experiments do not contain number 3 or 7
    experiment_folders = os.listdir(f"{path_experiments}/experiments")
    print (f'experiment folders after removal: {experiment_folders}\n')
    assert len(experiment_folders)==7 and ('00007' not in experiment_folders) and ('00008' not in experiment_folders)

    # we check that neither 3 nor 7 are in the new dataframe index
    experiments_data = read_df (path_experiments)
    print (f'csv data index after removal: {experiments_data.index}\n')
    assert (experiments_data.index==range(7)).all()

    assert (experiments_data.loc[3] == old_experiments_data.loc[4]).all() and (experiments_data.loc[6] == old_experiments_data.loc[8]).all()
    assert (experiments_data.loc[4] == old_experiments_data.loc[5]).all()

    print ('csv content:')
    print (experiments_data)

    em.remove_previous_experiments (parent=True)
    remove_previous_results ('test_alternative_remove_experiments')