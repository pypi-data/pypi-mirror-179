[tool.poetry]
name = "pytest-line-profiler-apn"
version = "0.1.5"
description = "Profile code executed by pytest"
authors = ["Martín Gaitán <gaitan@gmail.com>", "Alexander Puck Neuwirth <alexander@neuwirth-informatik.de>"]
maintainers = ["Alexander Puck Neuwirth <alexander@neuwirth-informatik.de>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
pytest=">=3.5.0"
line-profiler = "*"

[tool.poetry.plugins] # Optional super table

[tool.poetry.plugins."pytest11"]
"line-profiler" = "pytest_line_profiler_apn"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest-cov =  "*"
pytest-profiling =  "*"
poetry-dynamic-versioning = {extras = ["plugin"], version = "^0.21.1"}

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"
dirty = true
# modified dunami default pattern without v
pattern = '(?x)(?# ignore whitespace)^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)(?# v1.2.3 or v1!2000.1.2)([-._]?((?P<stage>[a-zA-Z]+)[-._]?(?P<revision>\d+)?))?(?# b0)(\+(?P<tagged_metadata>.+))?$(?# +linux)'
strict = true
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.{{ distance }}{% endif %}"
