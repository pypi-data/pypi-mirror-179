"""–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—Ç—Ä–æ–∫"""


def find_int(string, i):
    """–ü–æ–∏—Å–∫ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ—Ç –ø–æ—Å–ª–µ —Å–∏–º–≤–æ–ª–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º i

    >>> find_int("qa12ss", 1)
    12

    >>> find_int("aa1b321f", 1)
    1

    Args:
        string (str): —Å—Ç—Ä–æ–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        i (int): –∏–Ω–¥–µ–∫—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —Å–∏–º–≤–æ–ª–∞

    Returns:
        int: —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ—Ç –ø–æ—Å–ª–µ —Å–∏–º–≤–æ–ª–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º i
    """
    cnt = ""
    j = 0  # —Å—á–µ—Ç—á–∏–∫ –∫–æ–ª-–≤–∞ —Ü–∏—Ñ—Ä –≤ —á–∏—Å–ª–µ
    while string[(i + 1) + j].isdigit():
        cnt += string[(i + 1) + j]
        j += 1
    return int(cnt)


def conv(string):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é,
     –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∑–∞–º–µ–Ω—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å–ª–æ–º - –∏—Ö –∫–æ–ª-–≤–æ–º

    >>> conv("qqqqqqwwwwweeeerrrtty")
    'q6w5e4r3t2y'

    >>> conv("aaaa3f12j")
    'a43f12j'

    Args:
        string (str): —Å—Ç—Ä–æ–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    Returns:
        str: –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–∞—è –∫ –∫–æ—Ä–æ—Ç–∫–æ–º—É –≤–∏–¥—É
    """
    string += "üÉè"
    mas = []
    cnt = 0
    i = 0
    while i < len(string) - 1:
        cnt += 1
        if string[i] != string[i + 1]:
            if cnt == 1:
                mas.append(string[i])
            else:
                mas.append([string[i], cnt])
            cnt = 0
        i += 1

    mas = ''.join([''.join([str(u) for u in i]) for i in mas])
    return mas


def conv_(string):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é —Å—Ç—Ä–æ–∫—É –≤ –¥–ª–∏–Ω–Ω—É—é,
     –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —É–º–Ω–æ–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —á–∏—Å–ª–∞, –∏–¥—É—â–∏–µ –∑–∞ –Ω–∏–º–∏

    >>> conv_("aaa3f12j")
    'aaaaaffffffffffffj'

    >>> conv_("we2kend")
    'weekend'

    Args:
        string (str): —Å—Ç—Ä–æ–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    Returns:
        str: –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–∞—è –∫ –¥–ª–Ω–Ω–æ–º—É –≤–∏–¥—É
    """
    string += "üÉè"
    mas = ""
    i = 0
    while i < len(string) - 1:
        if string[i + 1].isdigit():
            coefficient = find_int(string, i)
            mas += string[i] * coefficient
            i += len(str(coefficient))
        else:
            mas += string[i]
        i += 1
    return mas


if __name__ == '__main__':
    import doctest

    doctest.testmod(verbose=True)
