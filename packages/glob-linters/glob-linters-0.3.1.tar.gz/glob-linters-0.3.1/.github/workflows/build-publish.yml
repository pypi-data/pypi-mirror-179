name: Build and publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types:
      - published

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  python-package-publish:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker-publish:
    needs: python-package-publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # x-release-please-start-version
      - name: Wait PyPi update
        run: |
          python -m pip install --upgrade pip
          while true; do pip download glob-linters==0.3.1 2> /dev/null && break || sleep 5; done
      # x-release-please-end
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse version
        id: parse_version
        run: |
          echo "${{ steps.meta.outputs.tags }}" | awk 'BEGIN {pre = 0} {if ($1 !~ /latest/) {split($1, tag, ":"); imagename = tag[1]; split(tag[2], ver, "-"); split(substr(ver[1], 2, length(ver[1])), pub, "."); if (ver[2] == "") {s[1] = $1","imagename":v"pub[1]} else {pre = 1; s[1] = $1}} else {s[2] = $1}} END {if (pre == 0) {print "tags="s[1]","s[2]} else {print "tags="s[1]}}' >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          push: true
          tags: ${{ steps.parse_version.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
