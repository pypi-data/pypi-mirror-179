{"version":3,"file":"npm.bs-custom-file-input.38e65693f1595035291c.js","mappings":"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","sources":["webpack://paper-admin/./node_modules/bs-custom-file-input/dist/bs-custom-file-input.js"],"sourcesContent":["/*!\n * bsCustomFileInput v1.3.4 (https://github.com/Johann-S/bs-custom-file-input)\n * Copyright 2018 - 2020 Johann-S <johann.servoire@gmail.com>\n * Licensed under MIT (https://github.com/Johann-S/bs-custom-file-input/blob/master/LICENSE)\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.bsCustomFileInput = factory());\n}(this, (function () { 'use strict';\n\n  var Selector = {\n    CUSTOMFILE: '.custom-file input[type=\"file\"]',\n    CUSTOMFILELABEL: '.custom-file-label',\n    FORM: 'form',\n    INPUT: 'input'\n  };\n\n  var textNodeType = 3;\n\n  var getDefaultText = function getDefaultText(input) {\n    var defaultText = '';\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      defaultText = label.textContent;\n    }\n\n    return defaultText;\n  };\n\n  var findFirstChildNode = function findFirstChildNode(element) {\n    if (element.childNodes.length > 0) {\n      var childNodes = [].slice.call(element.childNodes);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var node = childNodes[i];\n\n        if (node.nodeType !== textNodeType) {\n          return node;\n        }\n      }\n    }\n\n    return element;\n  };\n\n  var restoreDefaultText = function restoreDefaultText(input) {\n    var defaultText = input.bsCustomFileInput.defaultText;\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      element.textContent = defaultText;\n    }\n  };\n\n  var fileApi = !!window.File;\n  var FAKE_PATH = 'fakepath';\n  var FAKE_PATH_SEPARATOR = '\\\\';\n\n  var getSelectedFiles = function getSelectedFiles(input) {\n    if (input.hasAttribute('multiple') && fileApi) {\n      return [].slice.call(input.files).map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf(FAKE_PATH) !== -1) {\n      var splittedValue = input.value.split(FAKE_PATH_SEPARATOR);\n      return splittedValue[splittedValue.length - 1];\n    }\n\n    return input.value;\n  };\n\n  function handleInputChange() {\n    var label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      var inputValue = getSelectedFiles(this);\n\n      if (inputValue.length) {\n        element.textContent = inputValue;\n      } else {\n        restoreDefaultText(this);\n      }\n    }\n  }\n\n  function handleFormReset() {\n    var customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT)).filter(function (input) {\n      return !!input.bsCustomFileInput;\n    });\n\n    for (var i = 0, len = customFileList.length; i < len; i++) {\n      restoreDefaultText(customFileList[i]);\n    }\n  }\n\n  var customProperty = 'bsCustomFileInput';\n  var Event = {\n    FORMRESET: 'reset',\n    INPUTCHANGE: 'change'\n  };\n  var bsCustomFileInput = {\n    init: function init(inputSelector, formSelector) {\n      if (inputSelector === void 0) {\n        inputSelector = Selector.CUSTOMFILE;\n      }\n\n      if (formSelector === void 0) {\n        formSelector = Selector.FORM;\n      }\n\n      var customFileInputList = [].slice.call(document.querySelectorAll(inputSelector));\n      var formList = [].slice.call(document.querySelectorAll(formSelector));\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        Object.defineProperty(input, customProperty, {\n          value: {\n            defaultText: getDefaultText(input)\n          },\n          writable: true\n        });\n        handleInputChange.call(input);\n        input.addEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i = 0, _len = formList.length; _i < _len; _i++) {\n        formList[_i].addEventListener(Event.FORMRESET, handleFormReset);\n\n        Object.defineProperty(formList[_i], customProperty, {\n          value: true,\n          writable: true\n        });\n      }\n    },\n    destroy: function destroy() {\n      var formList = [].slice.call(document.querySelectorAll(Selector.FORM)).filter(function (form) {\n        return !!form.bsCustomFileInput;\n      });\n      var customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT)).filter(function (input) {\n        return !!input.bsCustomFileInput;\n      });\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        restoreDefaultText(input);\n        input[customProperty] = undefined;\n        input.removeEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i2 = 0, _len2 = formList.length; _i2 < _len2; _i2++) {\n        formList[_i2].removeEventListener(Event.FORMRESET, handleFormReset);\n\n        formList[_i2][customProperty] = undefined;\n      }\n    }\n  };\n\n  return bsCustomFileInput;\n\n})));\n//# sourceMappingURL=bs-custom-file-input.js.map\n"],"names":["module","exports","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","i","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","files","map","file","name","join","value","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","_i","_len","destroy","form","undefined","removeEventListener","_i2","_len2","factory"],"sourceRoot":""}