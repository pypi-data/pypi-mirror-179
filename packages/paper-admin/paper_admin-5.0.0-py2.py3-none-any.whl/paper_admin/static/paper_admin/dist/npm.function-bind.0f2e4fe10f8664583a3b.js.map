{"version":3,"file":"npm.function-bind.0f2e4fe10f8664583a3b.js","mappings":"4GAIA,IAAIA,EAAgB,kDAChBC,EAAQC,MAAMC,UAAUF,MACxBG,EAAQC,OAAOF,UAAUG,SACzBC,EAAW,oBAEfC,EAAOC,QAAU,SAAcC,GAC3B,IAAIC,EAASC,KACb,GAAsB,mBAAXD,GAAyBP,EAAMS,KAAKF,KAAYJ,EACvD,MAAM,IAAIO,UAAUd,EAAgBW,GAyBxC,IAvBA,IAEII,EAFAC,EAAOf,EAAMY,KAAKI,UAAW,GAG7BC,EAAS,WACT,GAAIN,gBAAgBG,EAAO,CACvB,IAAII,EAASR,EAAOS,MAChBR,KACAI,EAAKK,OAAOpB,EAAMY,KAAKI,aAE3B,OAAIZ,OAAOc,KAAYA,EACZA,EAEJP,IACX,CACI,OAAOD,EAAOS,MACVV,EACAM,EAAKK,OAAOpB,EAAMY,KAAKI,YAGnC,EAEIK,EAAcC,KAAKC,IAAI,EAAGb,EAAOc,OAAST,EAAKS,QAC/CC,EAAY,GACPC,EAAI,EAAGA,EAAIL,EAAaK,IAC7BD,EAAUE,KAAK,IAAMD,GAKzB,GAFAZ,EAAQc,SAAS,SAAU,oBAAsBH,EAAUI,KAAK,KAAO,4CAA/DD,CAA4GX,GAEhHP,EAAOR,UAAW,CAClB,IAAI4B,EAAQ,WAAkB,EAC9BA,EAAM5B,UAAYQ,EAAOR,UACzBY,EAAMZ,UAAY,IAAI4B,EACtBA,EAAM5B,UAAY,IACtB,CAEA,OAAOY,CACX,C,uBCjDA,IAAIiB,EAAiB,EAAQ,MAE7BxB,EAAOC,QAAUoB,SAAS1B,UAAU8B,MAAQD,C","sources":["webpack://paper-admin/./node_modules/function-bind/implementation.js","webpack://paper-admin/./node_modules/function-bind/index.js"],"sourcesContent":["'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n"],"names":["ERROR_MESSAGE","slice","Array","prototype","toStr","Object","toString","funcType","module","exports","that","target","this","call","TypeError","bound","args","arguments","binder","result","apply","concat","boundLength","Math","max","length","boundArgs","i","push","Function","join","Empty","implementation","bind"],"sourceRoot":""}