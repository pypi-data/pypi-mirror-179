{"version":3,"file":"npm.es-to-primitive.f7ff9cae98dd6f05568d.js","mappings":"gHAEA,IAAIA,EAA+B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAE3DC,EAAc,EAAQ,MACtBC,EAAa,EAAQ,MACrBC,EAAS,EAAQ,MACjBC,EAAW,EAAQ,MAEnBC,EAAsB,SAA6BC,EAAGC,GACzD,GAAI,MAAOD,EACV,MAAM,IAAIE,UAAU,yBAA2BF,GAEhD,GAAoB,iBAATC,GAA+B,WAATA,GAA8B,WAATA,EACrD,MAAM,IAAIC,UAAU,qCAErB,IACIC,EAAQC,EAAQC,EADhBC,EAAuB,WAATL,EAAoB,CAAC,WAAY,WAAa,CAAC,UAAW,YAE5E,IAAKI,EAAI,EAAGA,EAAIC,EAAYC,SAAUF,EAErC,GADAF,EAASH,EAAEM,EAAYD,IACnBT,EAAWO,KACdC,EAASD,EAAOK,KAAKR,GACjBL,EAAYS,IACf,OAAOA,EAIV,MAAM,IAAIF,UAAU,mBACrB,EAEIO,EAAY,SAAmBT,EAAGU,GACrC,IAAIC,EAAOX,EAAEU,GACb,GAAIC,QAA8C,CACjD,IAAKf,EAAWe,GACf,MAAM,IAAIT,UAAUS,EAAO,0BAA4BD,EAAI,cAAgBV,EAAI,sBAEhF,OAAOW,CACR,CAED,EAGAC,EAAOC,QAAU,SAAqBC,GACrC,GAAInB,EAAYmB,GACf,OAAOA,EAER,IASIC,EATAd,EAAO,UAiBX,GAhBIe,UAAUT,OAAS,IAClBS,UAAU,KAAOC,OACpBhB,EAAO,SACGe,UAAU,KAAOE,SAC3BjB,EAAO,WAKLT,IACCC,OAAO0B,YACVJ,EAAeN,EAAUK,EAAOrB,OAAO0B,aAC7BrB,EAASgB,KACnBC,EAAetB,OAAO2B,UAAUC,eAGN,IAAjBN,EAA8B,CACxC,IAAIX,EAASW,EAAaP,KAAKM,EAAOb,GACtC,GAAIN,EAAYS,GACf,OAAOA,EAER,MAAM,IAAIF,UAAU,+CACrB,CAIA,MAHa,YAATD,IAAuBJ,EAAOiB,IAAUhB,EAASgB,MACpDb,EAAO,UAEDF,EAAoBe,EAAgB,YAATb,EAAqB,SAAWA,EACnE,C,mBCxEAW,EAAOC,QAAU,SAAqBS,GACrC,OAAiB,OAAVA,GAAoC,mBAAVA,GAAyC,iBAAVA,CACjE,C","sources":["webpack://paper-admin/./node_modules/es-to-primitive/es2015.js","webpack://paper-admin/./node_modules/es-to-primitive/helpers/isPrimitive.js"],"sourcesContent":["'use strict';\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar isPrimitive = require('./helpers/isPrimitive');\nvar isCallable = require('is-callable');\nvar isDate = require('is-date-object');\nvar isSymbol = require('is-symbol');\n\nvar ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {\n\tif (typeof O === 'undefined' || O === null) {\n\t\tthrow new TypeError('Cannot call method on ' + O);\n\t}\n\tif (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {\n\t\tthrow new TypeError('hint must be \"string\" or \"number\"');\n\t}\n\tvar methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\tvar method, result, i;\n\tfor (i = 0; i < methodNames.length; ++i) {\n\t\tmethod = O[methodNames[i]];\n\t\tif (isCallable(method)) {\n\t\t\tresult = method.call(O);\n\t\t\tif (isPrimitive(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\tthrow new TypeError('No default value');\n};\n\nvar GetMethod = function GetMethod(O, P) {\n\tvar func = O[P];\n\tif (func !== null && typeof func !== 'undefined') {\n\t\tif (!isCallable(func)) {\n\t\t\tthrow new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');\n\t\t}\n\t\treturn func;\n\t}\n\treturn void 0;\n};\n\n// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tvar hint = 'default';\n\tif (arguments.length > 1) {\n\t\tif (arguments[1] === String) {\n\t\t\thint = 'string';\n\t\t} else if (arguments[1] === Number) {\n\t\t\thint = 'number';\n\t\t}\n\t}\n\n\tvar exoticToPrim;\n\tif (hasSymbols) {\n\t\tif (Symbol.toPrimitive) {\n\t\t\texoticToPrim = GetMethod(input, Symbol.toPrimitive);\n\t\t} else if (isSymbol(input)) {\n\t\t\texoticToPrim = Symbol.prototype.valueOf;\n\t\t}\n\t}\n\tif (typeof exoticToPrim !== 'undefined') {\n\t\tvar result = exoticToPrim.call(input, hint);\n\t\tif (isPrimitive(result)) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new TypeError('unable to convert exotic object to primitive');\n\t}\n\tif (hint === 'default' && (isDate(input) || isSymbol(input))) {\n\t\thint = 'string';\n\t}\n\treturn ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);\n};\n","'use strict';\n\nmodule.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n"],"names":["hasSymbols","Symbol","iterator","isPrimitive","isCallable","isDate","isSymbol","ordinaryToPrimitive","O","hint","TypeError","method","result","i","methodNames","length","call","GetMethod","P","func","module","exports","input","exoticToPrim","arguments","String","Number","toPrimitive","prototype","valueOf","value"],"sourceRoot":""}