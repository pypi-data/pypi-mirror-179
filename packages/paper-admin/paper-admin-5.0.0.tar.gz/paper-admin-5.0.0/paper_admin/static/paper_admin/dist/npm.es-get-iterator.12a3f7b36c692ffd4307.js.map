{"version":3,"file":"npm.es-get-iterator.12a3f7b36c692ffd4307.js","mappings":"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","sources":["webpack://paper-admin/./node_modules/es-get-iterator/index.js"],"sourcesContent":["'use strict';\n\n/* eslint global-require: 0 */\n// the code is structured this way so that bundlers can\n// alias out `has-symbols` to `() => true` or `() => false` if your target\n// environments' Symbol capabilities are known, and then use\n// dead code elimination on the rest of this module.\n//\n// Similarly, `isarray` can be aliased to `Array.isArray` if\n// available in all target environments.\n\nvar isArguments = require('is-arguments');\n\nif (require('has-symbols')() || require('has-symbols/shams')()) {\n\tvar $iterator = Symbol.iterator;\n\t// Symbol is available natively or shammed\n\t// natively:\n\t//  - Chrome >= 38\n\t//  - Edge 12-14?, Edge >= 15 for sure\n\t//  - FF >= 36\n\t//  - Safari >= 9\n\t//  - node >= 0.12\n\tmodule.exports = function getIterator(iterable) {\n\t\t// alternatively, `iterable[$iterator]?.()`\n\t\tif (iterable != null && typeof iterable[$iterator] !== 'undefined') {\n\t\t\treturn iterable[$iterator]();\n\t\t}\n\t\tif (isArguments(iterable)) {\n\t\t\t// arguments objects lack Symbol.iterator\n\t\t\t// - node 0.12\n\t\t\treturn Array.prototype[$iterator].call(iterable);\n\t\t}\n\t};\n} else {\n\t// Symbol is not available, native or shammed\n\tvar isArray = require('isarray');\n\tvar isString = require('is-string');\n\tvar GetIntrinsic = require('get-intrinsic');\n\tvar $Map = GetIntrinsic('%Map%', true);\n\tvar $Set = GetIntrinsic('%Set%', true);\n\tvar callBound = require('call-bind/callBound');\n\tvar $arrayPush = callBound('Array.prototype.push');\n\tvar $charCodeAt = callBound('String.prototype.charCodeAt');\n\tvar $stringSlice = callBound('String.prototype.slice');\n\n\tvar advanceStringIndex = function advanceStringIndex(S, index) {\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t};\n\n\tvar getArrayIterator = function getArrayIterator(arraylike) {\n\t\tvar i = 0;\n\t\treturn {\n\t\t\tnext: function next() {\n\t\t\t\tvar done = i >= arraylike.length;\n\t\t\t\tvar value;\n\t\t\t\tif (!done) {\n\t\t\t\t\tvalue = arraylike[i];\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdone: done,\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t};\n\n\tvar getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {\n\t\tif (isArray(iterable) || isArguments(iterable)) {\n\t\t\treturn getArrayIterator(iterable);\n\t\t}\n\t\tif (isString(iterable)) {\n\t\t\tvar i = 0;\n\t\t\treturn {\n\t\t\t\tnext: function next() {\n\t\t\t\t\tvar nextIndex = advanceStringIndex(iterable, i);\n\t\t\t\t\tvar value = $stringSlice(iterable, i, nextIndex);\n\t\t\t\t\ti = nextIndex;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: nextIndex > iterable.length,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// es6-shim and es-shims' es-map use a string \"_es6-shim iterator_\" property on different iterables, such as MapIterator.\n\t\tif (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {\n\t\t\treturn iterable['_es6-shim iterator_']();\n\t\t}\n\t};\n\n\tif (!$Map && !$Set) {\n\t\t// the only language iterables are Array, String, arguments\n\t\t// - Safari <= 6.0\n\t\t// - Chrome < 38\n\t\t// - node < 0.12\n\t\t// - FF < 13\n\t\t// - IE < 11\n\t\t// - Edge < 11\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\tif (iterable != null) {\n\t\t\t\treturn getNonCollectionIterator(iterable, true);\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// either Map or Set are available, but Symbol is not\n\t\t// - es6-shim on an ES5 browser\n\t\t// - Safari 6.2 (maybe 6.1?)\n\t\t// - FF v[13, 36)\n\t\t// - IE 11\n\t\t// - Edge 11\n\t\t// - Safari v[6, 9)\n\n\t\tvar isMap = require('is-map');\n\t\tvar isSet = require('is-set');\n\n\t\t// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach\n\t\tvar $mapForEach = callBound('Map.prototype.forEach', true);\n\t\tvar $setForEach = callBound('Set.prototype.forEach', true);\n\t\tif (typeof process === 'undefined' || !process.versions || !process.versions.node) { // \"if is not node\"\n\n\t\t\t// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either\n\t\t\t// returns a value, or throws a StopIteration object. These browsers\n\t\t\t// do not have any other mechanism for iteration.\n\t\t\tvar $mapIterator = callBound('Map.prototype.iterator', true);\n\t\t\tvar $setIterator = callBound('Set.prototype.iterator', true);\n\t\t\tvar getStopIterationIterator = function (iterator) {\n\t\t\t\tvar done = false;\n\t\t\t\treturn {\n\t\t\t\t\tnext: function next() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdone: done,\n\t\t\t\t\t\t\t\tvalue: done ? undefined : iterator.next()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdone: true,\n\t\t\t\t\t\t\t\tvalue: undefined\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\t// Firefox 27-35, and some older es6-shim versions, use a string \"@@iterator\" property\n\t\t// this returns a proper iterator object, so we should use it instead of forEach.\n\t\t// newer es6-shim versions use a string \"_es6-shim iterator_\" property.\n\t\tvar $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);\n\t\tvar $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);\n\n\t\tvar getCollectionIterator = function getCollectionIterator(iterable) {\n\t\t\tif (isMap(iterable)) {\n\t\t\t\tif ($mapIterator) {\n\t\t\t\t\treturn getStopIterationIterator($mapIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($mapAtAtIterator) {\n\t\t\t\t\treturn $mapAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($mapForEach) {\n\t\t\t\t\tvar entries = [];\n\t\t\t\t\t$mapForEach(iterable, function (v, k) {\n\t\t\t\t\t\t$arrayPush(entries, [k, v]);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(entries);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isSet(iterable)) {\n\t\t\t\tif ($setIterator) {\n\t\t\t\t\treturn getStopIterationIterator($setIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($setAtAtIterator) {\n\t\t\t\t\treturn $setAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($setForEach) {\n\t\t\t\t\tvar values = [];\n\t\t\t\t\t$setForEach(iterable, function (v) {\n\t\t\t\t\t\t$arrayPush(values, v);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(values);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\treturn getCollectionIterator(iterable) || getNonCollectionIterator(iterable);\n\t\t};\n\t}\n}\n"],"names":["isArguments","$iterator","Symbol","iterator","module","exports","iterable","Array","prototype","call","isArray","isString","GetIntrinsic","$Map","$Set","callBound","$arrayPush","$charCodeAt","$stringSlice","getArrayIterator","arraylike","i","next","value","done","length","getNonCollectionIterator","noPrimordialCollections","nextIndex","S","index","first","second","advanceStringIndex","isMap","isSet","$mapForEach","$setForEach","process","versions","node","$mapIterator","$setIterator","getStopIterationIterator","undefined","e","$mapAtAtIterator","$setAtAtIterator","entries","v","k","values","getCollectionIterator"],"sourceRoot":""}