# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _VkFFTBackendPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVkDiscreteGaussianImageFilterPython
else:
    import _itkVkDiscreteGaussianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVkDiscreteGaussianImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVkDiscreteGaussianImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkDiscreteGaussianImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkGaussianOperatorPython
import itk.itkNeighborhoodOperatorPython
import itk.itkNeighborhoodPython
import itk.itkImageBoundaryConditionPython

def itkVkDiscreteGaussianImageFilterID2ID2_New():
    return itkVkDiscreteGaussianImageFilterID2ID2.New()

class itkVkDiscreteGaussianImageFilterID2ID2(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterID2ID2):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterID2ID2
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterID2ID2

        Create a new object of the class itkVkDiscreteGaussianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterID2ID2 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_swigregister(itkVkDiscreteGaussianImageFilterID2ID2)
itkVkDiscreteGaussianImageFilterID2ID2___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2___New_orig__
itkVkDiscreteGaussianImageFilterID2ID2_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID2ID2_cast


def itkVkDiscreteGaussianImageFilterID3ID3_New():
    return itkVkDiscreteGaussianImageFilterID3ID3.New()

class itkVkDiscreteGaussianImageFilterID3ID3(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterID3ID3):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterID3ID3
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterID3ID3

        Create a new object of the class itkVkDiscreteGaussianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterID3ID3 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_swigregister(itkVkDiscreteGaussianImageFilterID3ID3)
itkVkDiscreteGaussianImageFilterID3ID3___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3___New_orig__
itkVkDiscreteGaussianImageFilterID3ID3_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID3ID3_cast


def itkVkDiscreteGaussianImageFilterID4ID4_New():
    return itkVkDiscreteGaussianImageFilterID4ID4.New()

class itkVkDiscreteGaussianImageFilterID4ID4(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterID4ID4):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterID4ID4
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterID4ID4

        Create a new object of the class itkVkDiscreteGaussianImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterID4ID4 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_swigregister(itkVkDiscreteGaussianImageFilterID4ID4)
itkVkDiscreteGaussianImageFilterID4ID4___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4___New_orig__
itkVkDiscreteGaussianImageFilterID4ID4_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterID4ID4_cast


def itkVkDiscreteGaussianImageFilterIF2IF2_New():
    return itkVkDiscreteGaussianImageFilterIF2IF2.New()

class itkVkDiscreteGaussianImageFilterIF2IF2(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIF2IF2):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIF2IF2
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIF2IF2

        Create a new object of the class itkVkDiscreteGaussianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIF2IF2 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_swigregister(itkVkDiscreteGaussianImageFilterIF2IF2)
itkVkDiscreteGaussianImageFilterIF2IF2___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2___New_orig__
itkVkDiscreteGaussianImageFilterIF2IF2_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF2IF2_cast


def itkVkDiscreteGaussianImageFilterIF3IF3_New():
    return itkVkDiscreteGaussianImageFilterIF3IF3.New()

class itkVkDiscreteGaussianImageFilterIF3IF3(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIF3IF3):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIF3IF3
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIF3IF3

        Create a new object of the class itkVkDiscreteGaussianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIF3IF3 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_swigregister(itkVkDiscreteGaussianImageFilterIF3IF3)
itkVkDiscreteGaussianImageFilterIF3IF3___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3___New_orig__
itkVkDiscreteGaussianImageFilterIF3IF3_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF3IF3_cast


def itkVkDiscreteGaussianImageFilterIF4IF4_New():
    return itkVkDiscreteGaussianImageFilterIF4IF4.New()

class itkVkDiscreteGaussianImageFilterIF4IF4(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIF4IF4):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIF4IF4
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIF4IF4

        Create a new object of the class itkVkDiscreteGaussianImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIF4IF4 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_swigregister(itkVkDiscreteGaussianImageFilterIF4IF4)
itkVkDiscreteGaussianImageFilterIF4IF4___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4___New_orig__
itkVkDiscreteGaussianImageFilterIF4IF4_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIF4IF4_cast


def itkVkDiscreteGaussianImageFilterISS2ISS2_New():
    return itkVkDiscreteGaussianImageFilterISS2ISS2.New()

class itkVkDiscreteGaussianImageFilterISS2ISS2(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterISS2ISS2):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterISS2ISS2

        Create a new object of the class itkVkDiscreteGaussianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterISS2ISS2 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_swigregister(itkVkDiscreteGaussianImageFilterISS2ISS2)
itkVkDiscreteGaussianImageFilterISS2ISS2___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2___New_orig__
itkVkDiscreteGaussianImageFilterISS2ISS2_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS2ISS2_cast


def itkVkDiscreteGaussianImageFilterISS3ISS3_New():
    return itkVkDiscreteGaussianImageFilterISS3ISS3.New()

class itkVkDiscreteGaussianImageFilterISS3ISS3(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterISS3ISS3):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterISS3ISS3

        Create a new object of the class itkVkDiscreteGaussianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterISS3ISS3 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_swigregister(itkVkDiscreteGaussianImageFilterISS3ISS3)
itkVkDiscreteGaussianImageFilterISS3ISS3___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3___New_orig__
itkVkDiscreteGaussianImageFilterISS3ISS3_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS3ISS3_cast


def itkVkDiscreteGaussianImageFilterISS4ISS4_New():
    return itkVkDiscreteGaussianImageFilterISS4ISS4.New()

class itkVkDiscreteGaussianImageFilterISS4ISS4(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterISS4ISS4):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterISS4ISS4

        Create a new object of the class itkVkDiscreteGaussianImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterISS4ISS4 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_swigregister(itkVkDiscreteGaussianImageFilterISS4ISS4)
itkVkDiscreteGaussianImageFilterISS4ISS4___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4___New_orig__
itkVkDiscreteGaussianImageFilterISS4ISS4_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterISS4ISS4_cast


def itkVkDiscreteGaussianImageFilterIUC2IUC2_New():
    return itkVkDiscreteGaussianImageFilterIUC2IUC2.New()

class itkVkDiscreteGaussianImageFilterIUC2IUC2(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUC2IUC2):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUC2IUC2

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUC2IUC2 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_swigregister(itkVkDiscreteGaussianImageFilterIUC2IUC2)
itkVkDiscreteGaussianImageFilterIUC2IUC2___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2___New_orig__
itkVkDiscreteGaussianImageFilterIUC2IUC2_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC2IUC2_cast


def itkVkDiscreteGaussianImageFilterIUC3IUC3_New():
    return itkVkDiscreteGaussianImageFilterIUC3IUC3.New()

class itkVkDiscreteGaussianImageFilterIUC3IUC3(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUC3IUC3):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUC3IUC3

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUC3IUC3 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_swigregister(itkVkDiscreteGaussianImageFilterIUC3IUC3)
itkVkDiscreteGaussianImageFilterIUC3IUC3___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3___New_orig__
itkVkDiscreteGaussianImageFilterIUC3IUC3_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC3IUC3_cast


def itkVkDiscreteGaussianImageFilterIUC4IUC4_New():
    return itkVkDiscreteGaussianImageFilterIUC4IUC4.New()

class itkVkDiscreteGaussianImageFilterIUC4IUC4(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUC4IUC4):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUC4IUC4

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUC4IUC4 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_swigregister(itkVkDiscreteGaussianImageFilterIUC4IUC4)
itkVkDiscreteGaussianImageFilterIUC4IUC4___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4___New_orig__
itkVkDiscreteGaussianImageFilterIUC4IUC4_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUC4IUC4_cast


def itkVkDiscreteGaussianImageFilterIUS2IUS2_New():
    return itkVkDiscreteGaussianImageFilterIUS2IUS2.New()

class itkVkDiscreteGaussianImageFilterIUS2IUS2(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUS2IUS2):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUS2IUS2

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUS2IUS2 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_swigregister(itkVkDiscreteGaussianImageFilterIUS2IUS2)
itkVkDiscreteGaussianImageFilterIUS2IUS2___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2___New_orig__
itkVkDiscreteGaussianImageFilterIUS2IUS2_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS2IUS2_cast


def itkVkDiscreteGaussianImageFilterIUS3IUS3_New():
    return itkVkDiscreteGaussianImageFilterIUS3IUS3.New()

class itkVkDiscreteGaussianImageFilterIUS3IUS3(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUS3IUS3):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUS3IUS3

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUS3IUS3 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_swigregister(itkVkDiscreteGaussianImageFilterIUS3IUS3)
itkVkDiscreteGaussianImageFilterIUS3IUS3___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3___New_orig__
itkVkDiscreteGaussianImageFilterIUS3IUS3_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS3IUS3_cast


def itkVkDiscreteGaussianImageFilterIUS4IUS4_New():
    return itkVkDiscreteGaussianImageFilterIUS4IUS4.New()

class itkVkDiscreteGaussianImageFilterIUS4IUS4(itk.itkDiscreteGaussianImageFilterPython.itkDiscreteGaussianImageFilterIUS4IUS4):
    r"""Proxy of C++ itkVkDiscreteGaussianImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_Clone)
    SetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_SetAnticipatedPerformanceMetricThreshold)
    GetAnticipatedPerformanceMetricThreshold = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetAnticipatedPerformanceMetricThreshold)
    GetLastRunUsedFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetLastRunUsedFFT)
    GetUseFFT = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetUseFFT)
    GetAnticipatedPerformanceMetric = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetAnticipatedPerformanceMetric)
    GetKernelRadius = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetKernelRadius)
    GetKernelSize = _swig_new_instance_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_GetKernelSize)
    __swig_destroy__ = _itkVkDiscreteGaussianImageFilterPython.delete_itkVkDiscreteGaussianImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVkDiscreteGaussianImageFilterIUS4IUS4

        Create a new object of the class itkVkDiscreteGaussianImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVkDiscreteGaussianImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVkDiscreteGaussianImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVkDiscreteGaussianImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVkDiscreteGaussianImageFilterIUS4IUS4 in _itkVkDiscreteGaussianImageFilterPython:
_itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_swigregister(itkVkDiscreteGaussianImageFilterIUS4IUS4)
itkVkDiscreteGaussianImageFilterIUS4IUS4___New_orig__ = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4___New_orig__
itkVkDiscreteGaussianImageFilterIUS4IUS4_cast = _itkVkDiscreteGaussianImageFilterPython.itkVkDiscreteGaussianImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def vk_discrete_gaussian_image_filter(*args: itkt.ImageLike,  anticipated_performance_metric_threshold: float=..., variance: Union[Sequence[float], float]=..., maximum_error: Union[Sequence[float], float]=..., maximum_kernel_width: int=..., filter_dimensionality: int=..., input_boundary_condition: itkt.ImageBoundaryCondition=..., real_boundary_condition: itkt.ImageBoundaryCondition=..., sigma: Union[float, Sequence[float]]=..., sigma_array: Sequence[float]=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VkDiscreteGaussianImageFilter"""
    import itk

    kwarg_typehints = { 'anticipated_performance_metric_threshold':anticipated_performance_metric_threshold,'variance':variance,'maximum_error':maximum_error,'maximum_kernel_width':maximum_kernel_width,'filter_dimensionality':filter_dimensionality,'input_boundary_condition':input_boundary_condition,'real_boundary_condition':real_boundary_condition,'sigma':sigma,'sigma_array':sigma_array,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.VkDiscreteGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def vk_discrete_gaussian_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.VkFFTBackend.VkDiscreteGaussianImageFilter
    vk_discrete_gaussian_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vk_discrete_gaussian_image_filter.__doc__ = filter_object.__doc__




