[tox]
envlist= py38,style
isolated_build = True

[testenv]
setenv =
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scipy-wheels-nightly/simple
deps=
    devdeps: -rrequirements-dev.txt
    # Newer versions of gwcs require astropy 4.x, which
    # isn't compatible with the older versions of numpy
    # that we test with.
    legacy: gwcs==0.9.1
# NOTE: this dependency on `six` is only here because `gwcs <= 0.18.1` requires it
    legacy: six~=1.4.0
    legacy: semantic_version==2.8
    legacy: pyyaml==3.13
    legacy: jsonschema==4.0.1
    legacy: numpy~=1.18
    legacy: pytest~=6.0.0
    legacy: astropy~=5.0.4
    numpydev,s390x: cython
extras= all,tests
# astropy will complain if the home directory is missing
passenv= HOME
usedevelop= true
commands=
    pip freeze
    pytest --remote-data

[testenv:s390x]
# As of 2020-01-23, The s390x container on Travis has a bug where
# /home/travis/.cache/pip/wheels is owned by root, which prevents
# us from installing packages unless we disable caching.
install_command= python -m pip install --no-cache-dir {opts} {packages}

[testenv:prerelease]
pip_pre= true

[testenv:packaged]
# The default tox working directory is in .tox in the source directory.  If we
# execute pytest from there, it will discover tox.ini in the source directory
# and load the asdf module from the unpackaged sourcee, which is not what we
# want.  The home directory does not have a tox.ini in any of its ancestors,
# so this will allow us to test the installed package.
usedevelop= false
changedir= {homedir}
commands=
    pip freeze
    pytest --pyargs asdf --remote-data

[testenv:egg_info]
deps=
commands=
    python setup.py egg_info

[testenv:twine]
usedevelop= false
deps=
    twine
commands=
    twine check {distdir}/*

[testenv:docbuild]
extras= docs
commands=
    pip freeze
    sphinx-build -W docs build/docs

[testenv:checkdocs]
deps=
    collective.checkdocs
    pygments
commands=
    python setup.py checkdocs

[testenv:style]
deps=
    flake8
commands=
    flake8 --count

# coverage run must be used because the pytest-asdf plugin will interfere
# with proper coverage measurement due to the order pytest loads its
# entry points.
[testenv:coverage]
deps=
    coverage
commands=
    pip freeze
    coverage run --source=asdf --rcfile={toxinidir}/pyproject.toml \
                     -m pytest --remote-data --open-files
    coverage xml -o {toxinidir}/coverage.xml

[testenv:compatibility]
deps=
    virtualenv
extras= all,tests
commands=
    pip freeze
    pytest compatibility_tests/ --remote-data

[testenv:bandit]
deps=
    bandit
    toml
commands=
    bandit -c bandit.yaml -r .

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}
