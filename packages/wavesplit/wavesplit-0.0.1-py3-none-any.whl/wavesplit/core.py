# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['run_cmd', 'merge', 'split']

# %% ../nbs/00_core.ipynb 3
import os, sys, json
import subprocess
from decimal import *

def run_cmd(cmd):
    bashCommand = cmd
    process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
    output, error = process.communicate()
    if error:
        print('Error', error)
    # convert output from binary to str
    outputString = str(output, 'utf-8').strip()
    return outputString

def merge():
    if len(sys.argv) < 2:
        print('Not enough arguments')
        exit()
    files = sys.argv[1:-1]
    out = run_cmd(f"soxi -D {' '.join(files)}")
    lengths = out.split('\n')

    pos = 0
    with open('merged.txt', 'w') as f:
        for (file, length) in zip(files, lengths):
            print(file, pos, length)
            # also print the same out to file
            f.write(f"{file}\t{pos}\t{length}\n")
            pos = pos+Decimal(length)

    merged = run_cmd(f"sox {' '.join(files)} merged.wav")

# %% ../nbs/00_core.ipynb 4
def split():
    if len(sys.argv) < 3:
        print('Not enough arguments')
        exit()
    wavFile = sys.argv[1]
    txtFile = sys.argv[2]

    if not os.path.isfile(wavFile) or not os.path.isfile(txtFile):
        print('Please ensure your input files exist')
        return
    with open(txtFile, 'r') as f:
        allLines = f.readlines()
    for line in allLines:
        file, start, end = line.split('\t')
        run_cmd(f"sox {wavFile} {file} trim {start} {end}")
