Metadata-Version: 2.1
Name: workcell
Version: 0.0.7
Summary: Turn python function into microservice.
License: Apache-2.0
Author: jiandong
Author-email: jiandong@weanalyze.co
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: docker (>=6.0.0,<7.0.0)
Requires-Dist: fastapi (>=0.85.1,<0.86.0)
Requires-Dist: pydantic (>=1.10.2,<2.0.0)
Requires-Dist: python-dotenv (>=0.21.0,<0.22.0)
Requires-Dist: typer (>=0.3.1,<0.4.0)
Requires-Dist: uvicorn (>=0.18.3,<0.19.0)
Description-Content-Type: text/markdown

<!-- markdownlint-disable MD033 MD041 -->
<h1 align="center">
    Workcell
</h1>

<p align="center">
    <strong>Instantly turn your Python function into production-ready microservice.</strong>
</p>

<p align="center">
    <a href="https://pypi.org/project/workcell/" title="PyPi Version"><img src="https://img.shields.io/pypi/v/workcell?color=green&style=flat"></a>
    <a href="https://pypi.org/project/workcell/" title="Python Version"><img src="https://img.shields.io/badge/Python-3.8%2B-blue&style=flat"></a>
    <a href="https://github.com/weanalyze/orpyter/blob/main/LICENSE" title="Project License"><img src="https://img.shields.io/badge/License-Apache2.0-blue.svg"></a>
</p>

<p align="center">
  <a href="#getting-started">Getting Started</a> â€¢
  <a href="#license">License</a> â€¢
  <a href="https://github.com/weanalyze/orpyter/releases">Changelog</a>
</p>

Instantly turn your Python function into production-ready microservice. 

<sup>Pre-alpha Version: Not feature-complete and only suggested for experimental usage.</sup>

<img align="center" style="width: 100%" src="https://github.com/weanalyze/weanalyze-resources/blob/main/assets/workcell_intro.png?raw=true"/>

---

## Highlights

- ðŸª„&nbsp; Turn functions into production-ready services within seconds.
- ðŸ”Œ&nbsp; Auto-generated HTTP API based on FastAPI.
- ðŸ“¦&nbsp; Deploy microservice into weanalye FaaS cloud.
- ðŸ§©&nbsp; Reuse pre-defined templates & combine with existing components.
- ðŸ“ˆ&nbsp; Instantly deploy and scale for production usage.

## Getting Started

### Installation

> _Requirements: Python 3.8+._

```bash
pip install workcell
```

### Usage

1. A simple orpyter-compatible function could look like this:

    ```python
    from pydantic import BaseModel

    class Input(BaseModel):
        message: str

    class Output(BaseModel):
        message: str

    def main(input: Input) -> Output:
        """Returns the `message` of the input data."""
        return Output(message=input.message)
    ```

    _ðŸ’¡ A workcell-compatible function is required to have an `input` parameter and return value based on [Pydantic models](https://pydantic-docs.helpmanual.io/). The input and output models are specified via [type hints](https://docs.python.org/3/library/typing.html)._

2. Copy this code to a file named `app.py`, put into a folder named as your function name, e.g. `hello-workcell`
3. Run the HTTP API server from command-line:

    ```bash
    workcell serve ./hello-workcell/app.py
    ```
    _In the output, there's a line that shows where your  serverless funtion is being served, on your local machine._
4. Deploy the service into weanalyze cloud from command-line:

    ```bash
    workcell login -u $USERNAME
    workcell deploy ./hello-workcell/app.py
    ```
    _In the output, there's a line that shows where your web service is being served, on weanalyze cloud._
5. Find out more usage information in the [Features](#features) section or get inspired by our [examples](#examples).

## License

Apache-2.0 License.

