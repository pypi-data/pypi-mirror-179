# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/dddex',
                'doc_host': 'https://kaiguender.github.io',
                'git_url': 'https://github.com/kaiguender/dddex',
                'lib_path': 'dddex'},
  'syms': { 'dddex.baseClasses': { 'dddex.baseClasses.BaseWeightsBasedEstimator': ( 'baseclasses.html#baseweightsbasedestimator',
                                                                                    'dddex/baseClasses.py'),
                                   'dddex.baseClasses.BaseWeightsBasedEstimator.getWeights': ( 'baseclasses.html#baseweightsbasedestimator.getweights',
                                                                                               'dddex/baseClasses.py'),
                                   'dddex.baseClasses.BaseWeightsBasedEstimator.predict': ( 'baseclasses.html#baseweightsbasedestimator.predict',
                                                                                            'dddex/baseClasses.py'),
                                   'dddex.baseClasses.BaseWeightsBasedEstimator.sampleScenarios': ( 'baseclasses.html#baseweightsbasedestimator.samplescenarios',
                                                                                                    'dddex/baseClasses.py'),
                                   'dddex.baseClasses.BaseWeightsBasedEstimator_multivariate': ( 'baseclasses.html#baseweightsbasedestimator_multivariate',
                                                                                                 'dddex/baseClasses.py'),
                                   'dddex.baseClasses.BaseWeightsBasedEstimator_multivariate.getWeights': ( 'baseclasses.html#baseweightsbasedestimator_multivariate.getweights',
                                                                                                            'dddex/baseClasses.py')},
            'dddex.basePredictor': { 'dddex.basePredictor.BaseWeightsBasedEstimator': ( 'baseclasses.html#baseweightsbasedestimator',
                                                                                        'dddex/basePredictor.py'),
                                     'dddex.basePredictor.BaseWeightsBasedEstimator.predict': ( 'baseclasses.html#baseweightsbasedestimator.predict',
                                                                                                'dddex/basePredictor.py'),
                                     'dddex.basePredictor.restructureWeightsDataList': ( 'baseclasses.html#restructureweightsdatalist',
                                                                                         'dddex/basePredictor.py'),
                                     'dddex.basePredictor.summarizeWeightsData': ( 'baseclasses.html#summarizeweightsdata',
                                                                                   'dddex/basePredictor.py')},
            'dddex.levelSetKDEx': { 'dddex.levelSetKDEx.BaseLSx': ('levelsetkdex.html#baselsx', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.BaseLSx.__init__': ('levelsetkdex.html#baselsx.__init__', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.BaseLSx.pointPredict': ( 'levelsetkdex.html#baselsx.pointpredict',
                                                                                 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.BaseLSx.refitPointEstimator': ( 'levelsetkdex.html#baselsx.refitpointestimator',
                                                                                        'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx': ('levelsetkdex.html#levelsetkdex', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx.__init__': ( 'levelsetkdex.html#levelsetkdex.__init__',
                                                                                  'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx.fit': ('levelsetkdex.html#levelsetkdex.fit', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx.getWeights': ( 'levelsetkdex.html#levelsetkdex.getweights',
                                                                                    'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_NN': ('levelsetkdex.html#levelsetkdex_nn', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_NN.__init__': ( 'levelsetkdex.html#levelsetkdex_nn.__init__',
                                                                                     'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_NN.fit': ( 'levelsetkdex.html#levelsetkdex_nn.fit',
                                                                                'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_NN.getWeights': ( 'levelsetkdex.html#levelsetkdex_nn.getweights',
                                                                                       'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_kNN': ('levelsetkdex.html#levelsetkdex_knn', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_kNN.__init__': ( 'levelsetkdex.html#levelsetkdex_knn.__init__',
                                                                                      'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_kNN.fit': ( 'levelsetkdex.html#levelsetkdex_knn.fit',
                                                                                 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.LevelSetKDEx_kNN.getWeights': ( 'levelsetkdex.html#levelsetkdex_knn.getweights',
                                                                                        'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.binSizeCV': ('levelsetkdex.html#binsizecv', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.binSizeCV.__init__': ( 'levelsetkdex.html#binsizecv.__init__',
                                                                               'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.binSizeCV.fit': ('levelsetkdex.html#binsizecv.fit', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.generateBins': ('levelsetkdex.html#generatebins', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.getCostRatio': ('levelsetkdex.html#getcostratio', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.getKernelValues': ('levelsetkdex.html#getkernelvalues', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.getNeighbors': ('levelsetkdex.html#getneighbors', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.getNeighborsTest': ('levelsetkdex.html#getneighborstest', 'dddex/levelSetKDEx.py'),
                                    'dddex.levelSetKDEx.scoresForFold': ('levelsetkdex.html#scoresforfold', 'dddex/levelSetKDEx.py')},
            'dddex.levelSetKDEx_multivariate': { 'dddex.levelSetKDEx_multivariate.LevelSetKDEx_multivariate': ( 'levelsetkdex_multivariate.html#levelsetkdex_multivariate',
                                                                                                                'dddex/levelSetKDEx_multivariate.py'),
                                                 'dddex.levelSetKDEx_multivariate.LevelSetKDEx_multivariate.__init__': ( 'levelsetkdex_multivariate.html#levelsetkdex_multivariate.__init__',
                                                                                                                         'dddex/levelSetKDEx_multivariate.py'),
                                                 'dddex.levelSetKDEx_multivariate.LevelSetKDEx_multivariate._getEqualSizedClusters': ( 'levelsetkdex_multivariate.html#levelsetkdex_multivariate._getequalsizedclusters',
                                                                                                                                       'dddex/levelSetKDEx_multivariate.py'),
                                                 'dddex.levelSetKDEx_multivariate.LevelSetKDEx_multivariate.fit': ( 'levelsetkdex_multivariate.html#levelsetkdex_multivariate.fit',
                                                                                                                    'dddex/levelSetKDEx_multivariate.py'),
                                                 'dddex.levelSetKDEx_multivariate.LevelSetKDEx_multivariate.getWeights': ( 'levelsetkdex_multivariate.html#levelsetkdex_multivariate.getweights',
                                                                                                                           'dddex/levelSetKDEx_multivariate.py')},
            'dddex.loadData': { 'dddex.loadData.add_lag_features': ('loaddata.html#add_lag_features', 'dddex/loadData.py'),
                                'dddex.loadData.loadDataYaz': ('loaddata.html#loaddatayaz', 'dddex/loadData.py')},
            'dddex.utils': { 'dddex.utils.generateFinalOutput': ('utils.html#generatefinaloutput', 'dddex/utils.py'),
                             'dddex.utils.groupedTimeSeriesSplit': ('utils.html#groupedtimeseriessplit', 'dddex/utils.py'),
                             'dddex.utils.restructureWeightsDataList': ('utils.html#restructureweightsdatalist', 'dddex/utils.py'),
                             'dddex.utils.restructureWeightsDataList_multivariate': ( 'utils.html#restructureweightsdatalist_multivariate',
                                                                                      'dddex/utils.py'),
                             'dddex.utils.summarizeWeightsData': ('utils.html#summarizeweightsdata', 'dddex/utils.py'),
                             'dddex.utils.summarizeWeightsData_multivariate': ( 'utils.html#summarizeweightsdata_multivariate',
                                                                                'dddex/utils.py')},
            'dddex.wSAA': { 'dddex.wSAA.RandomForestWSAA': ('wsaa.html#randomforestwsaa', 'dddex/wSAA.py'),
                            'dddex.wSAA.RandomForestWSAA.fit': ('wsaa.html#randomforestwsaa.fit', 'dddex/wSAA.py'),
                            'dddex.wSAA.RandomForestWSAA.getWeights': ('wsaa.html#randomforestwsaa.getweights', 'dddex/wSAA.py'),
                            'dddex.wSAA.RandomForestWSAA.pointPredict': ('wsaa.html#randomforestwsaa.pointpredict', 'dddex/wSAA.py'),
                            'dddex.wSAA.RandomForestWSAA.predict': ('wsaa.html#randomforestwsaa.predict', 'dddex/wSAA.py'),
                            'dddex.wSAA.SampleAverageApproximation': ('wsaa.html#sampleaverageapproximation', 'dddex/wSAA.py'),
                            'dddex.wSAA.SampleAverageApproximation.__init__': ( 'wsaa.html#sampleaverageapproximation.__init__',
                                                                                'dddex/wSAA.py'),
                            'dddex.wSAA.SampleAverageApproximation.__str__': ( 'wsaa.html#sampleaverageapproximation.__str__',
                                                                               'dddex/wSAA.py'),
                            'dddex.wSAA.SampleAverageApproximation.fit': ('wsaa.html#sampleaverageapproximation.fit', 'dddex/wSAA.py'),
                            'dddex.wSAA.SampleAverageApproximation.getWeights': ( 'wsaa.html#sampleaverageapproximation.getweights',
                                                                                  'dddex/wSAA.py')}}}
