# Autogenerated by nbdev

d = { 'settings': { 'branch': 'nbdev2_1',
                'doc_baseurl': '/ds-blocks',
                'doc_host': 'https://Jaume-JCI.github.io',
                'git_url': 'https://github.com/Jaume-JCI/ds-blocks',
                'lib_path': 'dsblocks'},
  'syms': { 'dsblocks.blocks.blocks': { 'dsblocks.blocks.blocks.DoubleKFoldBase': ( 'blocks/blocks.html#doublekfoldbase',
                                                                                    'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.DoubleKFoldBase.__init__': ( 'blocks/blocks.html#doublekfoldbase.__init__',
                                                                                             'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.DoubleKFoldBase.get_n_splits': ( 'blocks/blocks.html#doublekfoldbase.get_n_splits',
                                                                                                 'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.DoubleKFoldBase.split': ( 'blocks/blocks.html#doublekfoldbase.split',
                                                                                          'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Evaluator': ('blocks/blocks.html#evaluator', 'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Evaluator.__init__': ( 'blocks/blocks.html#evaluator.__init__',
                                                                                       'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Evaluator._apply': ( 'blocks/blocks.html#evaluator._apply',
                                                                                     'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Evaluator._get_metrics': ( 'blocks/blocks.html#evaluator._get_metrics',
                                                                                           'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.FixedDoubleKFold': ( 'blocks/blocks.html#fixeddoublekfold',
                                                                                     'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.FixedDoubleKFold.__init__': ( 'blocks/blocks.html#fixeddoublekfold.__init__',
                                                                                              'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.FixedDoubleKFold.split': ( 'blocks/blocks.html#fixeddoublekfold.split',
                                                                                           'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.MultiSplitSource': ( 'blocks/blocks.html#multisplitsource',
                                                                                     'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.PandasEvaluator': ( 'blocks/blocks.html#pandasevaluator',
                                                                                    'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.PandasEvaluator.__init__': ( 'blocks/blocks.html#pandasevaluator.__init__',
                                                                                             'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.PandasEvaluator._apply': ( 'blocks/blocks.html#pandasevaluator._apply',
                                                                                           'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SingleKFold': ( 'blocks/blocks.html#singlekfold',
                                                                                'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SingleKFold.__init__': ( 'blocks/blocks.html#singlekfold.__init__',
                                                                                         'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SingleKFold.split': ( 'blocks/blocks.html#singlekfold.split',
                                                                                      'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator': ( 'blocks/blocks.html#sksplitgenerator',
                                                                                     'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator.__init__': ( 'blocks/blocks.html#sksplitgenerator.__init__',
                                                                                              'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator._apply': ( 'blocks/blocks.html#sksplitgenerator._apply',
                                                                                            'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator._create_split': ( 'blocks/blocks.html#sksplitgenerator._create_split',
                                                                                                   'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator._fit_apply': ( 'blocks/blocks.html#sksplitgenerator._fit_apply',
                                                                                                'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.SkSplitGenerator.reset': ( 'blocks/blocks.html#sksplitgenerator.reset',
                                                                                           'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Source': ('blocks/blocks.html#source', 'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Source.__init__': ( 'blocks/blocks.html#source.__init__',
                                                                                    'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Source._apply': ( 'blocks/blocks.html#source._apply',
                                                                                  'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Splitter': ('blocks/blocks.html#splitter', 'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Splitter.__init__': ( 'blocks/blocks.html#splitter.__init__',
                                                                                      'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks.Splitter._apply': ( 'blocks/blocks.html#splitter._apply',
                                                                                    'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks._initialize_result': ( 'blocks/blocks.html#_initialize_result',
                                                                                       'dsblocks/blocks/blocks.py'),
                                        'dsblocks.blocks.blocks._join_result': ( 'blocks/blocks.html#_join_result',
                                                                                 'dsblocks/blocks/blocks.py')},
            'dsblocks.blocks.preprocessing': { 'dsblocks.blocks.preprocessing.OneHotEncoder': ( 'blocks/preprocessing.html#onehotencoder',
                                                                                                'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.OneHotEncoder.__init__': ( 'blocks/preprocessing.html#onehotencoder.__init__',
                                                                                                         'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.OneHotEncoder._apply': ( 'blocks/preprocessing.html#onehotencoder._apply',
                                                                                                       'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.OneHotEncoder._fit': ( 'blocks/preprocessing.html#onehotencoder._fit',
                                                                                                     'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowAggregator': ( 'blocks/preprocessing.html#windowaggregator',
                                                                                                   'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowAggregator.__init__': ( 'blocks/preprocessing.html#windowaggregator.__init__',
                                                                                                            'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowAggregator._fit': ( 'blocks/preprocessing.html#windowaggregator._fit',
                                                                                                        'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowAggregator._transform': ( 'blocks/preprocessing.html#windowaggregator._transform',
                                                                                                              'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowAggregator.aggregate': ( 'blocks/preprocessing.html#windowaggregator.aggregate',
                                                                                                             'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator': ( 'blocks/preprocessing.html#windowgenerator',
                                                                                                  'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator.__init__': ( 'blocks/preprocessing.html#windowgenerator.__init__',
                                                                                                           'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator._fit': ( 'blocks/preprocessing.html#windowgenerator._fit',
                                                                                                       'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator._transform': ( 'blocks/preprocessing.html#windowgenerator._transform',
                                                                                                             'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator.construct_dataframe_of_sequences': ( 'blocks/preprocessing.html#windowgenerator.construct_dataframe_of_sequences',
                                                                                                                                   'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator.describe': ( 'blocks/preprocessing.html#windowgenerator.describe',
                                                                                                           'dsblocks/blocks/preprocessing.py'),
                                               'dsblocks.blocks.preprocessing.WindowGenerator.plot': ( 'blocks/preprocessing.html#windowgenerator.plot',
                                                                                                       'dsblocks/blocks/preprocessing.py')},
            'dsblocks.config.bt_defaults': { 'dsblocks.config.bt_defaults._overrride_defaults': ( 'config/config.bt_defaults.html#_overrride_defaults',
                                                                                                  'dsblocks/config/bt_defaults.py')},
            'dsblocks.core.callback': { 'dsblocks.core.callback.BaseCallback': ( 'core/callback.html#basecallback',
                                                                                 'dsblocks/core/callback.py'),
                                        'dsblocks.core.callback.BaseCallback.__init__': ( 'core/callback.html#basecallback.__init__',
                                                                                          'dsblocks/core/callback.py'),
                                        'dsblocks.core.callback.BaseCallback.set_parent': ( 'core/callback.html#basecallback.set_parent',
                                                                                            'dsblocks/core/callback.py')},
            'dsblocks.core.components': { 'dsblocks.core.components.Component': ( 'core/components.html#component',
                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.__call__': ( 'core/components.html#component.__call__',
                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.__init__': ( 'core/components.html#component.__init__',
                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.__repr__': ( 'core/components.html#component.__repr__',
                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._add_validation_and_test': ( 'core/components.html#component._add_validation_and_test',
                                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._assign_fit_apply_func': ( 'core/components.html#component._assign_fit_apply_func',
                                                                                                         'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._assign_fit_func': ( 'core/components.html#component._assign_fit_func',
                                                                                                   'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._assign_result_func': ( 'core/components.html#component._assign_result_func',
                                                                                                      'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._build_partial_and_determine_args': ( 'core/components.html#component._build_partial_and_determine_args',
                                                                                                                    'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._build_partial_from_kwargs': ( 'core/components.html#component._build_partial_from_kwargs',
                                                                                                             'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._compute_result': ( 'core/components.html#component._compute_result',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._determine_args': ( 'core/components.html#component._determine_args',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._determine_component_name': ( 'core/components.html#component._determine_component_name',
                                                                                                            'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._fit_': ( 'core/components.html#component._fit_',
                                                                                        'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._repr': ( 'core/components.html#component._repr',
                                                                                        'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component._set_name': ( 'core/components.html#component._set_name',
                                                                                            'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.apply_and_track': ( 'core/components.html#component.apply_and_track',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.assert_equal': ( 'core/components.html#component.assert_equal',
                                                                                               'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.assign_apply_and_fit_functions': ( 'core/components.html#component.assign_apply_and_fit_functions',
                                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.build_partials_and_determine_args': ( 'core/components.html#component.build_partials_and_determine_args',
                                                                                                                    'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.compare_kwargs_against_actual_args': ( 'core/components.html#component.compare_kwargs_against_actual_args',
                                                                                                                     'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.create_estimator': ( 'core/components.html#component.create_estimator',
                                                                                                   'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.fit_and_track': ( 'core/components.html#component.fit_and_track',
                                                                                                'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.fit_apply': ( 'core/components.html#component.fit_apply',
                                                                                            'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.fit_apply_and_track': ( 'core/components.html#component.fit_apply_and_track',
                                                                                                      'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.fit_like': ( 'core/components.html#component.fit_like',
                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.get_kwargs': ( 'core/components.html#component.get_kwargs',
                                                                                             'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.get_specific_data_io_parameters': ( 'core/components.html#component.get_specific_data_io_parameters',
                                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.get_specific_tag_parameters': ( 'core/components.html#component.get_specific_tag_parameters',
                                                                                                              'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.load_estimator': ( 'core/components.html#component.load_estimator',
                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.load_result': ( 'core/components.html#component.load_result',
                                                                                              'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.obtain_config_params': ( 'core/components.html#component.obtain_config_params',
                                                                                                       'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.remove_non_pickable_fields': ( 'core/components.html#component.remove_non_pickable_fields',
                                                                                                             'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.reset_logger': ( 'core/components.html#component.reset_logger',
                                                                                               'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_apply': ( 'core/components.html#component.set_apply',
                                                                                            'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_data_io': ( 'core/components.html#component.set_data_io',
                                                                                              'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_estimator': ( 'core/components.html#component.set_estimator',
                                                                                                'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_fit_apply': ( 'core/components.html#component.set_fit_apply',
                                                                                                'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_load_model': ( 'core/components.html#component.set_load_model',
                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_load_result': ( 'core/components.html#component.set_load_result',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_name': ( 'core/components.html#component.set_name',
                                                                                           'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_save_model': ( 'core/components.html#component.set_save_model',
                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_save_result': ( 'core/components.html#component.set_save_result',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_save_splits': ( 'core/components.html#component.set_save_splits',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_split': ( 'core/components.html#component.set_split',
                                                                                            'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_suffix': ( 'core/components.html#component.set_suffix',
                                                                                             'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.set_track_results': ( 'core/components.html#component.set_track_results',
                                                                                                    'dsblocks/core/components.py'),
                                          'dsblocks.core.components.Component.show_result_statistics': ( 'core/components.html#component.show_result_statistics',
                                                                                                         'dsblocks/core/components.py'),
                                          'dsblocks.core.components.NoSaverComponent': ( 'core/components.html#nosavercomponent',
                                                                                         'dsblocks/core/components.py'),
                                          'dsblocks.core.components.NoSaverComponent.__init__': ( 'core/components.html#nosavercomponent.__init__',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.OneClassSklearnComponent': ( 'core/components.html#oneclasssklearncomponent',
                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.OneClassSklearnComponent.__init__': ( 'core/components.html#oneclasssklearncomponent.__init__',
                                                                                                          'dsblocks/core/components.py'),
                                          'dsblocks.core.components.OneClassSklearnComponent._fit': ( 'core/components.html#oneclasssklearncomponent._fit',
                                                                                                      'dsblocks/core/components.py'),
                                          'dsblocks.core.components.PandasComponent': ( 'core/components.html#pandascomponent',
                                                                                        'dsblocks/core/components.py'),
                                          'dsblocks.core.components.PandasComponent.__init__': ( 'core/components.html#pandascomponent.__init__',
                                                                                                 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.SamplingComponent': ( 'core/components.html#samplingcomponent',
                                                                                          'dsblocks/core/components.py'),
                                          'dsblocks.core.components.SamplingComponent.__init__': ( 'core/components.html#samplingcomponent.__init__',
                                                                                                   'dsblocks/core/components.py'),
                                          'dsblocks.core.components.SklearnComponent': ( 'core/components.html#sklearncomponent',
                                                                                         'dsblocks/core/components.py'),
                                          'dsblocks.core.components.SklearnComponent.__init__': ( 'core/components.html#sklearncomponent.__init__',
                                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.component': ( 'core/components.html#component',
                                                                                  'dsblocks/core/components.py'),
                                          'dsblocks.core.components.io': ('core/components.html#io', 'dsblocks/core/components.py'),
                                          'dsblocks.core.components.pandas_io': ( 'core/components.html#pandas_io',
                                                                                  'dsblocks/core/components.py')},
            'dsblocks.core.compose': { 'dsblocks.core.compose.ColumnSelector': ( 'core/compose.html#columnselector',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ColumnSelector.__init__': ( 'core/compose.html#columnselector.__init__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ColumnSelector._apply': ( 'core/compose.html#columnselector._apply',
                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ColumnTransformer': ( 'core/compose.html#columntransformer',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ColumnTransformer.__init__': ( 'core/compose.html#columntransformer.__init__',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Concat': ('core/compose.html#concat', 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Concat.__init__': ( 'core/compose.html#concat.__init__',
                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Concat._apply': ( 'core/compose.html#concat._apply',
                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidator': ( 'core/compose.html#crossvalidator',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidator.__init__': ( 'core/compose.html#crossvalidator.__init__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidator._apply_pruner': ( 'core/compose.html#crossvalidator._apply_pruner',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback': ( 'core/compose.html#crossvalidatorcallback',
                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback.__init__': ( 'core/compose.html#crossvalidatorcallback.__init__',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback._add_dict_results': ( 'core/compose.html#crossvalidatorcallback._add_dict_results',
                                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback.finalize_result': ( 'core/compose.html#crossvalidatorcallback.finalize_result',
                                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback.join_result': ( 'core/compose.html#crossvalidatorcallback.join_result',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback.store_component_fit_info': ( 'core/compose.html#crossvalidatorcallback.store_component_fit_info',
                                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.CrossValidatorCallback.store_fit_info': ( 'core/compose.html#crossvalidatorcallback.store_fit_info',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Identity': ('core/compose.html#identity', 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Identity.__init__': ( 'core/compose.html#identity.__init__',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Identity._apply': ( 'core/compose.html#identity._apply',
                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent': ( 'core/compose.html#multicomponent',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.__init__': ( 'core/compose.html#multicomponent.__init__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.__repr__': ( 'core/compose.html#multicomponent.__repr__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.__setattr__': ( 'core/compose.html#multicomponent.__setattr__',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent._add_named_attribute': ( 'core/compose.html#multicomponent._add_named_attribute',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent._insert_descendant': ( 'core/compose.html#multicomponent._insert_descendant',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.add_component': ( 'core/compose.html#multicomponent.add_component',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.add_metadata_to_repo': ( 'core/compose.html#multicomponent.add_metadata_to_repo',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.assert_all_equal': ( 'core/compose.html#multicomponent.assert_all_equal',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.chain_folders': ( 'core/compose.html#multicomponent.chain_folders',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.clear_descendants': ( 'core/compose.html#multicomponent.clear_descendants',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.compare_kwargs_against_actual_args': ( 'core/compose.html#multicomponent.compare_kwargs_against_actual_args',
                                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.construct_diagram': ( 'core/compose.html#multicomponent.construct_diagram',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.exist_all_estimators': ( 'core/compose.html#multicomponent.exist_all_estimators',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.find_last_fitted_model': ( 'core/compose.html#multicomponent.find_last_fitted_model',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.find_last_result': ( 'core/compose.html#multicomponent.find_last_result',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.find_method': ( 'core/compose.html#multicomponent.find_method',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.gather_and_save_info': ( 'core/compose.html#multicomponent.gather_and_save_info',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.gather_descendants': ( 'core/compose.html#multicomponent.gather_descendants',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.gather_times': ( 'core/compose.html#multicomponent.gather_times',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.get_kwargs': ( 'core/compose.html#multicomponent.get_kwargs',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.get_split': ( 'core/compose.html#multicomponent.get_split',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.list': ( 'core/compose.html#multicomponent.list',
                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.load_estimator': ( 'core/compose.html#multicomponent.load_estimator',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.number_levels': ( 'core/compose.html#multicomponent.number_levels',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.obtain_component': ( 'core/compose.html#multicomponent.obtain_component',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.propagate_attribute': ( 'core/compose.html#multicomponent.propagate_attribute',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.propagate_sub_component_attribute': ( 'core/compose.html#multicomponent.propagate_sub_component_attribute',
                                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.rebuild_with_args': ( 'core/compose.html#multicomponent.rebuild_with_args',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.recursive_rebuild_with_args': ( 'core/compose.html#multicomponent.recursive_rebuild_with_args',
                                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.register_components': ( 'core/compose.html#multicomponent.register_components',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.register_global_name': ( 'core/compose.html#multicomponent.register_global_name',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.remove_non_pickable_fields': ( 'core/compose.html#multicomponent.remove_non_pickable_fields',
                                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.save_call_stack': ( 'core/compose.html#multicomponent.save_call_stack',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.save_logs': ( 'core/compose.html#multicomponent.save_logs',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.save_object': ( 'core/compose.html#multicomponent.save_object',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.save_result': ( 'core/compose.html#multicomponent.save_result',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_but_not_add_component_attr': ( 'core/compose.html#multicomponent.set_but_not_add_component_attr',
                                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_components': ( 'core/compose.html#multicomponent.set_components',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_load_model': ( 'core/compose.html#multicomponent.set_load_model',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_load_result': ( 'core/compose.html#multicomponent.set_load_result',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_path_models': ( 'core/compose.html#multicomponent.set_path_models',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_path_results': ( 'core/compose.html#multicomponent.set_path_results',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_root': ( 'core/compose.html#multicomponent.set_root',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_root_info': ( 'core/compose.html#multicomponent.set_root_info',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_save_model': ( 'core/compose.html#multicomponent.set_save_model',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_save_result': ( 'core/compose.html#multicomponent.set_save_result',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_save_splits': ( 'core/compose.html#multicomponent.set_save_splits',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_separate_data': ( 'core/compose.html#multicomponent.set_separate_data',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_split': ( 'core/compose.html#multicomponent.set_split',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_suffix': ( 'core/compose.html#multicomponent.set_suffix',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.set_unique_names': ( 'core/compose.html#multicomponent.set_unique_names',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.show': ( 'core/compose.html#multicomponent.show',
                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.show_result_statistics': ( 'core/compose.html#multicomponent.show_result_statistics',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.show_summary': ( 'core/compose.html#multicomponent.show_summary',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiComponent.write_git_hash_and_root_path': ( 'core/compose.html#multicomponent.write_git_hash_and_root_path',
                                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent': ( 'core/compose.html#multisplitcomponent',
                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent.__init__': ( 'core/compose.html#multisplitcomponent.__init__',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._add_result': ( 'core/compose.html#multisplitcomponent._add_result',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._apply': ( 'core/compose.html#multisplitcomponent._apply',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._convert_result': ( 'core/compose.html#multisplitcomponent._convert_result',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._fit': ( 'core/compose.html#multisplitcomponent._fit',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._get_split_keys': ( 'core/compose.html#multisplitcomponent._get_split_keys',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._include_split_in_fit': ( 'core/compose.html#multisplitcomponent._include_split_in_fit',
                                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._included_split': ( 'core/compose.html#multisplitcomponent._included_split',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._initialize_apply': ( 'core/compose.html#multisplitcomponent._initialize_apply',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._initialize_fit': ( 'core/compose.html#multisplitcomponent._initialize_fit',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._initialize_result': ( 'core/compose.html#multisplitcomponent._initialize_result',
                                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._issue_error_or_warning': ( 'core/compose.html#multisplitcomponent._issue_error_or_warning',
                                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._select_split': ( 'core/compose.html#multisplitcomponent._select_split',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent._select_training_split': ( 'core/compose.html#multisplitcomponent._select_training_split',
                                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent.find_last_fitted_model': ( 'core/compose.html#multisplitcomponent.find_last_fitted_model',
                                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitComponent.find_last_result': ( 'core/compose.html#multisplitcomponent.find_last_result',
                                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn': ( 'core/compose.html#multisplitdfcolumn',
                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn.__init__': ( 'core/compose.html#multisplitdfcolumn.__init__',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn.__repr__': ( 'core/compose.html#multisplitdfcolumn.__repr__',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._add_result': ( 'core/compose.html#multisplitdfcolumn._add_result',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._convert_result': ( 'core/compose.html#multisplitdfcolumn._convert_result',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._get_split_keys': ( 'core/compose.html#multisplitdfcolumn._get_split_keys',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._include_split_in_fit': ( 'core/compose.html#multisplitdfcolumn._include_split_in_fit',
                                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._included_split': ( 'core/compose.html#multisplitdfcolumn._included_split',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._initialize_apply': ( 'core/compose.html#multisplitdfcolumn._initialize_apply',
                                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._initialize_fit': ( 'core/compose.html#multisplitdfcolumn._initialize_fit',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._initialize_result': ( 'core/compose.html#multisplitdfcolumn._initialize_result',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._select_split': ( 'core/compose.html#multisplitdfcolumn._select_split',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDFColumn._select_training_split': ( 'core/compose.html#multisplitdfcolumn._select_training_split',
                                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict': ( 'core/compose.html#multisplitdict',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict.__init__': ( 'core/compose.html#multisplitdict.__init__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict.__repr__': ( 'core/compose.html#multisplitdict.__repr__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._add_result': ( 'core/compose.html#multisplitdict._add_result',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._convert_result': ( 'core/compose.html#multisplitdict._convert_result',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._get_split_keys': ( 'core/compose.html#multisplitdict._get_split_keys',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._include_split_in_fit': ( 'core/compose.html#multisplitdict._include_split_in_fit',
                                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._included_split': ( 'core/compose.html#multisplitdict._included_split',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._initialize_apply': ( 'core/compose.html#multisplitdict._initialize_apply',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._initialize_fit': ( 'core/compose.html#multisplitdict._initialize_fit',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._initialize_result': ( 'core/compose.html#multisplitdict._initialize_result',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._select_split': ( 'core/compose.html#multisplitdict._select_split',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.MultiSplitDict._select_training_split': ( 'core/compose.html#multisplitdict._select_training_split',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.PandasPipeline': ( 'core/compose.html#pandaspipeline',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.PandasPipeline.__init__': ( 'core/compose.html#pandaspipeline.__init__',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel': ('core/compose.html#parallel', 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel.__init__': ( 'core/compose.html#parallel.__init__',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel.__repr__': ( 'core/compose.html#parallel.__repr__',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel._apply': ( 'core/compose.html#parallel._apply',
                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel._finish_loop': ( 'core/compose.html#parallel._finish_loop',
                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel._fit': ( 'core/compose.html#parallel._fit',
                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel._fit_apply': ( 'core/compose.html#parallel._fit_apply',
                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel.find_last_fitted_model': ( 'core/compose.html#parallel.find_last_fitted_model',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Parallel.find_last_result': ( 'core/compose.html#parallel.find_last_result',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback': ( 'core/compose.html#parallelcallback',
                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.__getattr__': ( 'core/compose.html#parallelcallback.__getattr__',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.__init__': ( 'core/compose.html#parallelcallback.__init__',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.finalize_result': ( 'core/compose.html#parallelcallback.finalize_result',
                                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.initialize_result': ( 'core/compose.html#parallelcallback.initialize_result',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.join_result': ( 'core/compose.html#parallelcallback.join_result',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.select_input': ( 'core/compose.html#parallelcallback.select_input',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.select_input_to_fit': ( 'core/compose.html#parallelcallback.select_input_to_fit',
                                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.set_component_info': ( 'core/compose.html#parallelcallback.set_component_info',
                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_apply_info': ( 'core/compose.html#parallelcallback.store_apply_info',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_component_apply_info': ( 'core/compose.html#parallelcallback.store_component_apply_info',
                                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_component_find_last_fitted_model_info': ( 'core/compose.html#parallelcallback.store_component_find_last_fitted_model_info',
                                                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_component_find_last_result_info': ( 'core/compose.html#parallelcallback.store_component_find_last_result_info',
                                                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_component_fit_apply_info': ( 'core/compose.html#parallelcallback.store_component_fit_apply_info',
                                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_component_fit_info': ( 'core/compose.html#parallelcallback.store_component_fit_info',
                                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_fit_apply_info': ( 'core/compose.html#parallelcallback.store_fit_apply_info',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelCallback.store_fit_info': ( 'core/compose.html#parallelcallback.store_fit_info',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannels': ( 'core/compose.html#parallelchannels',
                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannels.__init__': ( 'core/compose.html#parallelchannels.__init__',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannels.__repr__': ( 'core/compose.html#parallelchannels.__repr__',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback': ( 'core/compose.html#parallelchannelscallback',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback.__init__': ( 'core/compose.html#parallelchannelscallback.__init__',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback.initialize_result': ( 'core/compose.html#parallelchannelscallback.initialize_result',
                                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback.join_result': ( 'core/compose.html#parallelchannelscallback.join_result',
                                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback.select_input': ( 'core/compose.html#parallelchannelscallback.select_input',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelChannelsCallback.select_input_to_fit': ( 'core/compose.html#parallelchannelscallback.select_input_to_fit',
                                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstances': ( 'core/compose.html#parallelinstances',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstances.__init__': ( 'core/compose.html#parallelinstances.__init__',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstances.__repr__': ( 'core/compose.html#parallelinstances.__repr__',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstances.set_unique_names': ( 'core/compose.html#parallelinstances.set_unique_names',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback': ( 'core/compose.html#parallelinstancescallback',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.__init__': ( 'core/compose.html#parallelinstancescallback.__init__',
                                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.create_component_storage_info': ( 'core/compose.html#parallelinstancescallback.create_component_storage_info',
                                                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.set_component_config': ( 'core/compose.html#parallelinstancescallback.set_component_config',
                                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.set_component_info': ( 'core/compose.html#parallelinstancescallback.set_component_info',
                                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.store_component_find_last_fitted_model_info': ( 'core/compose.html#parallelinstancescallback.store_component_find_last_fitted_model_info',
                                                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelInstancesCallback.store_component_find_last_result_info': ( 'core/compose.html#parallelinstancescallback.store_component_find_last_result_info',
                                                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstances': ( 'core/compose.html#parallelmodelinstances',
                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstances.__init__': ( 'core/compose.html#parallelmodelinstances.__init__',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstancesCallback': ( 'core/compose.html#parallelmodelinstancescallback',
                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstancesCallback.__init__': ( 'core/compose.html#parallelmodelinstancescallback.__init__',
                                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstancesCallback.finalize_result': ( 'core/compose.html#parallelmodelinstancescallback.finalize_result',
                                                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.ParallelModelInstancesCallback.set_component_config': ( 'core/compose.html#parallelmodelinstancescallback.set_component_config',
                                                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline': ('core/compose.html#pipeline', 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline.__init__': ( 'core/compose.html#pipeline.__init__',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline.__repr__': ( 'core/compose.html#pipeline.__repr__',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline._apply': ( 'core/compose.html#pipeline._apply',
                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline._fit': ( 'core/compose.html#pipeline._fit',
                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline._fit_apply': ( 'core/compose.html#pipeline._fit_apply',
                                                                                      'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline.find_last_fitted_model': ( 'core/compose.html#pipeline.find_last_fitted_model',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.Pipeline.find_last_result': ( 'core/compose.html#pipeline.find_last_result',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.SequentialWithTracking': ( 'core/compose.html#sequentialwithtracking',
                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.SequentialWithTracking.__init__': ( 'core/compose.html#sequentialwithtracking.__init__',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent': ( 'core/compose.html#trackingcomponent',
                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent.__init__': ( 'core/compose.html#trackingcomponent.__init__',
                                                                                             'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent._apply': ( 'core/compose.html#trackingcomponent._apply',
                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent._fit': ( 'core/compose.html#trackingcomponent._fit',
                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent._fit_apply': ( 'core/compose.html#trackingcomponent._fit_apply',
                                                                                               'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.TrackingComponent.get_experiment_manager': ( 'core/compose.html#trackingcomponent.get_experiment_manager',
                                                                                                           'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.WeightedClassifier': ( 'core/compose.html#weightedclassifier',
                                                                                     'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.WeightedClassifier.__init__': ( 'core/compose.html#weightedclassifier.__init__',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.WeightedClassifier._apply': ( 'core/compose.html#weightedclassifier._apply',
                                                                                            'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._BaseColumnTransformer': ( 'core/compose.html#_basecolumntransformer',
                                                                                         'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._BaseColumnTransformer.__init__': ( 'core/compose.html#_basecolumntransformer.__init__',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._BaseColumnTransformer._apply': ( 'core/compose.html#_basecolumntransformer._apply',
                                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._BaseColumnTransformer._fit': ( 'core/compose.html#_basecolumntransformer._fit',
                                                                                              'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._BaseColumnTransformer.set_components': ( 'core/compose.html#_basecolumntransformer.set_components',
                                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._append_pipeline': ( 'core/compose.html#_append_pipeline',
                                                                                   'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose._get_transformer_name': ( 'core/compose.html#_get_transformer_name',
                                                                                        'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.finalize_result_parallel_models': ( 'core/compose.html#finalize_result_parallel_models',
                                                                                                  'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.make_column_transformer': ( 'core/compose.html#make_column_transformer',
                                                                                          'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.make_column_transformer_pipelines': ( 'core/compose.html#make_column_transformer_pipelines',
                                                                                                    'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.make_ensembler': ( 'core/compose.html#make_ensembler',
                                                                                 'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.make_parallel_models': ( 'core/compose.html#make_parallel_models',
                                                                                       'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.make_pipeline': ( 'core/compose.html#make_pipeline',
                                                                                'dsblocks/core/compose.py'),
                                       'dsblocks.core.compose.pipeline_factory': ( 'core/compose.html#pipeline_factory',
                                                                                   'dsblocks/core/compose.py')},
            'dsblocks.core.data_conversion': { 'dsblocks.core.data_conversion.DataConverter': ( 'core/data_conversion.html#dataconverter',
                                                                                                'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.__init__': ( 'core/data_conversion.html#dataconverter.__init__',
                                                                                                         'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter._set_convert_from_functions': ( 'core/data_conversion.html#dataconverter._set_convert_from_functions',
                                                                                                                            'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_after_applying': ( 'core/data_conversion.html#dataconverter.convert_after_applying',
                                                                                                                       'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_after_applying_from_function': ( 'core/data_conversion.html#dataconverter.convert_after_applying_from_function',
                                                                                                                                     'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_after_fit_apply': ( 'core/data_conversion.html#dataconverter.convert_after_fit_apply',
                                                                                                                        'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_after_fitting': ( 'core/data_conversion.html#dataconverter.convert_after_fitting',
                                                                                                                      'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_after_fitting_from_function': ( 'core/data_conversion.html#dataconverter.convert_after_fitting_from_function',
                                                                                                                                    'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_before_applying': ( 'core/data_conversion.html#dataconverter.convert_before_applying',
                                                                                                                        'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_before_applying_from_function': ( 'core/data_conversion.html#dataconverter.convert_before_applying_from_function',
                                                                                                                                      'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_before_fit_apply': ( 'core/data_conversion.html#dataconverter.convert_before_fit_apply',
                                                                                                                         'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_before_fitting': ( 'core/data_conversion.html#dataconverter.convert_before_fitting',
                                                                                                                       'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_before_fitting_from_function': ( 'core/data_conversion.html#dataconverter.convert_before_fitting_from_function',
                                                                                                                                     'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_no_tuple': ( 'core/data_conversion.html#dataconverter.convert_no_tuple',
                                                                                                                 'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_single_tuple': ( 'core/data_conversion.html#dataconverter.convert_single_tuple',
                                                                                                                     'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.convert_varargs_to_x_y': ( 'core/data_conversion.html#dataconverter.convert_varargs_to_x_y',
                                                                                                                       'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.do_not_convert_no_tuple': ( 'core/data_conversion.html#dataconverter.do_not_convert_no_tuple',
                                                                                                                        'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.do_not_convert_single_tuple': ( 'core/data_conversion.html#dataconverter.do_not_convert_single_tuple',
                                                                                                                            'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.DataConverter.make_none_empty_tuple': ( 'core/data_conversion.html#dataconverter.make_none_empty_tuple',
                                                                                                                      'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.GenericConverter': ( 'core/data_conversion.html#genericconverter',
                                                                                                   'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.GenericConverter.__init__': ( 'core/data_conversion.html#genericconverter.__init__',
                                                                                                            'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.GenericConverter._may_have_y': ( 'core/data_conversion.html#genericconverter._may_have_y',
                                                                                                               'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.GenericConverter.convert_after_applying': ( 'core/data_conversion.html#genericconverter.convert_after_applying',
                                                                                                                          'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.GenericConverter.convert_before_applying': ( 'core/data_conversion.html#genericconverter.convert_before_applying',
                                                                                                                           'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.NoConverter': ( 'core/data_conversion.html#noconverter',
                                                                                              'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.NoConverter.__init__': ( 'core/data_conversion.html#noconverter.__init__',
                                                                                                       'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter': ( 'core/data_conversion.html#pandasconverter',
                                                                                                  'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.__init__': ( 'core/data_conversion.html#pandasconverter.__init__',
                                                                                                           'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.convert_after_applying': ( 'core/data_conversion.html#pandasconverter.convert_after_applying',
                                                                                                                         'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.convert_after_fitting': ( 'core/data_conversion.html#pandasconverter.convert_after_fitting',
                                                                                                                        'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.convert_before_applying': ( 'core/data_conversion.html#pandasconverter.convert_before_applying',
                                                                                                                          'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.convert_before_fitting': ( 'core/data_conversion.html#pandasconverter.convert_before_fitting',
                                                                                                                         'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.PandasConverter.convert_to_dataframe': ( 'core/data_conversion.html#pandasconverter.convert_to_dataframe',
                                                                                                                       'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.StandardConverter': ( 'core/data_conversion.html#standardconverter',
                                                                                                    'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.StandardConverter.__init__': ( 'core/data_conversion.html#standardconverter.__init__',
                                                                                                             'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.StandardConverter.convert_after_applying': ( 'core/data_conversion.html#standardconverter.convert_after_applying',
                                                                                                                           'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.StandardConverter.convert_before_applying': ( 'core/data_conversion.html#standardconverter.convert_before_applying',
                                                                                                                            'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter': ( 'core/data_conversion.html#window2dto3dconverter',
                                                                                                        'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.__init__': ( 'core/data_conversion.html#window2dto3dconverter.__init__',
                                                                                                                 'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.convert_after_applying': ( 'core/data_conversion.html#window2dto3dconverter.convert_after_applying',
                                                                                                                               'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.convert_after_fitting': ( 'core/data_conversion.html#window2dto3dconverter.convert_after_fitting',
                                                                                                                              'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.convert_before_applying': ( 'core/data_conversion.html#window2dto3dconverter.convert_before_applying',
                                                                                                                                'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.convert_before_fitting': ( 'core/data_conversion.html#window2dto3dconverter.convert_before_fitting',
                                                                                                                               'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.inverse_transform': ( 'core/data_conversion.html#window2dto3dconverter.inverse_transform',
                                                                                                                          'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.Window2Dto3Dconverter.transform': ( 'core/data_conversion.html#window2dto3dconverter.transform',
                                                                                                                  'dsblocks/core/data_conversion.py'),
                                               'dsblocks.core.data_conversion.data_converter_factory': ( 'core/data_conversion.html#data_converter_factory',
                                                                                                         'dsblocks/core/data_conversion.py')},
            'dsblocks.core.utils': { 'dsblocks.core.utils.Comparator': ('core/utils.html#comparator', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Comparator.__init__': ( 'core/utils.html#comparator.__init__',
                                                                                  'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Comparator.assert_equal': ( 'core/utils.html#comparator.assert_equal',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Comparator.compare': ( 'core/utils.html#comparator.compare',
                                                                                 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Comparator.compare_objects': ( 'core/utils.html#comparator.compare_objects',
                                                                                         'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO': ('core/utils.html#dataio', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.__init__': ('core/utils.html#dataio.__init__', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._exists': ('core/utils.html#dataio._exists', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._get_folder_name': ( 'core/utils.html#dataio._get_folder_name',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._init': ('core/utils.html#dataio._init', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._load': ('core/utils.html#dataio._load', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._load_estimator': ( 'core/utils.html#dataio._load_estimator',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._load_result': ( 'core/utils.html#dataio._load_result',
                                                                                  'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._save': ('core/utils.html#dataio._save', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._save_estimator': ( 'core/utils.html#dataio._save_estimator',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO._save_result': ( 'core/utils.html#dataio._save_result',
                                                                                  'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.can_load_model': ( 'core/utils.html#dataio.can_load_model',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.can_load_result': ( 'core/utils.html#dataio.can_load_result',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.can_save_model': ( 'core/utils.html#dataio.can_save_model',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.can_save_result': ( 'core/utils.html#dataio.can_save_result',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.chain_folders': ( 'core/utils.html#dataio.chain_folders',
                                                                                   'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.exists_estimator': ( 'core/utils.html#dataio.exists_estimator',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.exists_result': ( 'core/utils.html#dataio.exists_result',
                                                                                   'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.get_path_model_file': ( 'core/utils.html#dataio.get_path_model_file',
                                                                                         'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.get_path_result_file': ( 'core/utils.html#dataio.get_path_result_file',
                                                                                          'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.load_estimator': ( 'core/utils.html#dataio.load_estimator',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.load_estimators': ( 'core/utils.html#dataio.load_estimators',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.load_result': ( 'core/utils.html#dataio.load_result',
                                                                                 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.save_estimator': ( 'core/utils.html#dataio.save_estimator',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.save_result': ( 'core/utils.html#dataio.save_result',
                                                                                 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_file_names': ( 'core/utils.html#dataio.set_file_names',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_fitting_file_name': ( 'core/utils.html#dataio.set_fitting_file_name',
                                                                                           'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_folder': ( 'core/utils.html#dataio.set_folder',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_full_path_models': ( 'core/utils.html#dataio.set_full_path_models',
                                                                                          'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_full_path_results': ( 'core/utils.html#dataio.set_full_path_results',
                                                                                           'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_load': ('core/utils.html#dataio.set_load', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_load_model': ( 'core/utils.html#dataio.set_load_model',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_load_result': ( 'core/utils.html#dataio.set_load_result',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_memory': ( 'core/utils.html#dataio.set_memory',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_path_models': ( 'core/utils.html#dataio.set_path_models',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_path_results': ( 'core/utils.html#dataio.set_path_results',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_result_file_name': ( 'core/utils.html#dataio.set_result_file_name',
                                                                                          'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_save': ('core/utils.html#dataio.set_save', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_save_model': ( 'core/utils.html#dataio.set_save_model',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_save_result': ( 'core/utils.html#dataio.set_save_result',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_save_splits': ( 'core/utils.html#dataio.set_save_splits',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.set_split': ('core/utils.html#dataio.set_split', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.setup': ('core/utils.html#dataio.setup', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.DataIO.write_git_hash_and_root_path': ( 'core/utils.html#dataio.write_git_hash_and_root_path',
                                                                                                  'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryIO': ('core/utils.html#memoryio', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryIO.__init__': ( 'core/utils.html#memoryio.__init__',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryIO._exists': ('core/utils.html#memoryio._exists', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryLoader': ('core/utils.html#memoryloader', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryLoader.__call__': ( 'core/utils.html#memoryloader.__call__',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemoryLoader.__init__': ( 'core/utils.html#memoryloader.__init__',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemorySaver': ('core/utils.html#memorysaver', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemorySaver.__call__': ( 'core/utils.html#memorysaver.__call__',
                                                                                   'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.MemorySaver.__init__': ( 'core/utils.html#memorysaver.__init__',
                                                                                   'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter': ('core/utils.html#modelplotter', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter.__init__': ( 'core/utils.html#modelplotter.__init__',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter.get_edge_name': ( 'core/utils.html#modelplotter.get_edge_name',
                                                                                         'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter.get_module_path': ( 'core/utils.html#modelplotter.get_module_path',
                                                                                           'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter.get_node_name': ( 'core/utils.html#modelplotter.get_node_name',
                                                                                         'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.ModelPlotter.set_component': ( 'core/utils.html#modelplotter.set_component',
                                                                                         'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.NoSaverIO': ('core/utils.html#nosaverio', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.NoSaverIO.__init__': ( 'core/utils.html#nosaverio.__init__',
                                                                                 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.PandasIO': ('core/utils.html#pandasio', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.PandasIO.__init__': ( 'core/utils.html#pandasio.__init__',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.PickleIO': ('core/utils.html#pickleio', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.PickleIO.__init__': ( 'core/utils.html#pickleio.__init__',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler': ('core/utils.html#profiler', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.__init__': ( 'core/utils.html#profiler.__init__',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler._compute_avg': ( 'core/utils.html#profiler._compute_avg',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler._finish_timer': ( 'core/utils.html#profiler._finish_timer',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.analyze_overhead': ( 'core/utils.html#profiler.analyze_overhead',
                                                                                        'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.combine_times': ( 'core/utils.html#profiler.combine_times',
                                                                                     'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.finish_no_overhead_timer': ( 'core/utils.html#profiler.finish_no_overhead_timer',
                                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.finish_timer': ( 'core/utils.html#profiler.finish_timer',
                                                                                    'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.retrieve_times': ( 'core/utils.html#profiler.retrieve_times',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.start_no_overhead_timer': ( 'core/utils.html#profiler.start_no_overhead_timer',
                                                                                               'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.Profiler.start_timer': ( 'core/utils.html#profiler.start_timer',
                                                                                   'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.camel_to_snake': ('core/utils.html#camel_to_snake', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.compare': ('core/utils.html#compare', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.data_io_factory': ('core/utils.html#data_io_factory', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_component_class_defaults': ( 'core/utils.html#get_component_class_defaults',
                                                                                           'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_component_func_defaults': ( 'core/utils.html#get_component_func_defaults',
                                                                                          'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_component_hierarchy': ( 'core/utils.html#get_component_hierarchy',
                                                                                      'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_ds_experiment_manager': ( 'core/utils.html#get_ds_experiment_manager',
                                                                                        'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_parent_class': ('core/utils.html#get_parent_class', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.get_tree_defaults': ( 'core/utils.html#get_tree_defaults',
                                                                                'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.load_keras_model': ('core/utils.html#load_keras_model', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.read_csv': ('core/utils.html#read_csv', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.read_csv_gz': ('core/utils.html#read_csv_gz', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_csv': ('core/utils.html#save_csv', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_csv_gz': ('core/utils.html#save_csv_gz', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_json': ('core/utils.html#save_json', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_keras_model': ('core/utils.html#save_keras_model', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_multi_index_parquet': ( 'core/utils.html#save_multi_index_parquet',
                                                                                       'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.save_parquet': ('core/utils.html#save_parquet', 'dsblocks/core/utils.py'),
                                     'dsblocks.core.utils.snake_to_camel': ('core/utils.html#snake_to_camel', 'dsblocks/core/utils.py')},
            'dsblocks.datasets.datasets': { 'dsblocks.datasets.datasets.DataSet': ( 'datasets/datasets.html#dataset',
                                                                                    'dsblocks/datasets/datasets.py'),
                                            'dsblocks.datasets.datasets.DataSet.__init__': ( 'datasets/datasets.html#dataset.__init__',
                                                                                             'dsblocks/datasets/datasets.py'),
                                            'dsblocks.datasets.datasets.DataSet.load': ( 'datasets/datasets.html#dataset.load',
                                                                                         'dsblocks/datasets/datasets.py')},
            'dsblocks.utils.cli': { 'dsblocks.utils.cli.dsblocks_install_git_hooks': ( 'utils/cli.html#dsblocks_install_git_hooks',
                                                                                       'dsblocks/utils/cli.py'),
                                    'dsblocks.utils.cli.main_dsblocks_install_git_hooks': ( 'utils/cli.html#main_dsblocks_install_git_hooks',
                                                                                            'dsblocks/utils/cli.py')},
            'dsblocks.utils.dummies': { 'dsblocks.utils.dummies.DataSource': ('utils/dummies.html#datasource', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DataSource.__init__': ( 'utils/dummies.html#datasource.__init__',
                                                                                        'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DataSource._apply': ( 'utils/dummies.html#datasource._apply',
                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyClassifier': ( 'utils/dummies.html#dummyclassifier',
                                                                                    'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyClassifier.__init__': ( 'utils/dummies.html#dummyclassifier.__init__',
                                                                                             'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyClassifier._apply_distance': ( 'utils/dummies.html#dummyclassifier._apply_distance',
                                                                                                    'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyClassifier._apply_simple': ( 'utils/dummies.html#dummyclassifier._apply_simple',
                                                                                                  'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyClassifier._fit': ( 'utils/dummies.html#dummyclassifier._fit',
                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimator': ( 'utils/dummies.html#dummyestimator',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimator.__init__': ( 'utils/dummies.html#dummyestimator.__init__',
                                                                                            'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimator.fit': ( 'utils/dummies.html#dummyestimator.fit',
                                                                                       'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimator.transform': ( 'utils/dummies.html#dummyestimator.transform',
                                                                                             'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimatorWithLabels': ( 'utils/dummies.html#dummyestimatorwithlabels',
                                                                                             'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimatorWithLabels.__init__': ( 'utils/dummies.html#dummyestimatorwithlabels.__init__',
                                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimatorWithLabels.fit': ( 'utils/dummies.html#dummyestimatorwithlabels.fit',
                                                                                                 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.DummyEstimatorWithLabels.transform': ( 'utils/dummies.html#dummyestimatorwithlabels.transform',
                                                                                                       'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Higher': ('utils/dummies.html#higher', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Higher.__init__': ( 'utils/dummies.html#higher.__init__',
                                                                                    'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Intermediate': ( 'utils/dummies.html#intermediate',
                                                                                 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Intermediate.__init__': ( 'utils/dummies.html#intermediate.__init__',
                                                                                          'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10': ('utils/dummies.html#max10', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10.__init__': ( 'utils/dummies.html#max10.__init__',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10._apply': ( 'utils/dummies.html#max10._apply',
                                                                                 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10._fit': ('utils/dummies.html#max10._fit', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10direct': ( 'utils/dummies.html#max10direct',
                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10direct.__init__': ( 'utils/dummies.html#max10direct.__init__',
                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10direct._apply': ( 'utils/dummies.html#max10direct._apply',
                                                                                       'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Max10direct._fit': ( 'utils/dummies.html#max10direct._fit',
                                                                                     'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MaxOfPositiveWithSeparateLabels': ( 'utils/dummies.html#maxofpositivewithseparatelabels',
                                                                                                    'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MaxOfPositiveWithSeparateLabels.__init__': ( 'utils/dummies.html#maxofpositivewithseparatelabels.__init__',
                                                                                                             'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MaxOfPositiveWithSeparateLabels._apply': ( 'utils/dummies.html#maxofpositivewithseparatelabels._apply',
                                                                                                           'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MaxOfPositiveWithSeparateLabels._fit': ( 'utils/dummies.html#maxofpositivewithseparatelabels._fit',
                                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10': ('utils/dummies.html#min10', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10.__init__': ( 'utils/dummies.html#min10.__init__',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10._apply': ( 'utils/dummies.html#min10._apply',
                                                                                 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10._fit': ('utils/dummies.html#min10._fit', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10direct': ( 'utils/dummies.html#min10direct',
                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10direct.__init__': ( 'utils/dummies.html#min10direct.__init__',
                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10direct._apply': ( 'utils/dummies.html#min10direct._apply',
                                                                                       'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Min10direct._fit': ( 'utils/dummies.html#min10direct._fit',
                                                                                     'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinMaxClass': ( 'utils/dummies.html#minmaxclass',
                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinMaxClass.__init__': ( 'utils/dummies.html#minmaxclass.__init__',
                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinMaxClass.apply': ( 'utils/dummies.html#minmaxclass.apply',
                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinMaxClass.fit': ( 'utils/dummies.html#minmaxclass.fit',
                                                                                    'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinMaxClass.fit_apply': ( 'utils/dummies.html#minmaxclass.fit_apply',
                                                                                          'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinOfPositiveWithoutSeparateLabels': ( 'utils/dummies.html#minofpositivewithoutseparatelabels',
                                                                                                       'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinOfPositiveWithoutSeparateLabels.__init__': ( 'utils/dummies.html#minofpositivewithoutseparatelabels.__init__',
                                                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinOfPositiveWithoutSeparateLabels._apply': ( 'utils/dummies.html#minofpositivewithoutseparatelabels._apply',
                                                                                                              'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.MinOfPositiveWithoutSeparateLabels._fit': ( 'utils/dummies.html#minofpositivewithoutseparatelabels._fit',
                                                                                                            'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10': ('utils/dummies.html#multiply10', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10.__init__': ( 'utils/dummies.html#multiply10.__init__',
                                                                                        'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10._apply': ( 'utils/dummies.html#multiply10._apply',
                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10.apply': ( 'utils/dummies.html#multiply10.apply',
                                                                                     'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10direct': ( 'utils/dummies.html#multiply10direct',
                                                                                     'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10direct.__init__': ( 'utils/dummies.html#multiply10direct.__init__',
                                                                                              'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Multiply10direct._apply': ( 'utils/dummies.html#multiply10direct._apply',
                                                                                            'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.NewParallel': ( 'utils/dummies.html#newparallel',
                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.NewParallel.__init__': ( 'utils/dummies.html#newparallel.__init__',
                                                                                         'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.NewParallel.apply': ( 'utils/dummies.html#newparallel.apply',
                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1': ('utils/dummies.html#sum1', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1.__init__': ( 'utils/dummies.html#sum1.__init__',
                                                                                  'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1._apply': ( 'utils/dummies.html#sum1._apply',
                                                                                'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1.apply': ('utils/dummies.html#sum1.apply', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1direct': ('utils/dummies.html#sum1direct', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1direct.__init__': ( 'utils/dummies.html#sum1direct.__init__',
                                                                                        'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.Sum1direct._apply': ( 'utils/dummies.html#sum1direct._apply',
                                                                                      'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.SumXY': ('utils/dummies.html#sumxy', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.SumXY._apply': ( 'utils/dummies.html#sumxy._apply',
                                                                                 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.get_data_frame': ( 'utils/dummies.html#get_data_frame',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.make_pipe1': ('utils/dummies.html#make_pipe1', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.make_pipe2': ('utils/dummies.html#make_pipe2', 'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.make_pipe_fit1': ( 'utils/dummies.html#make_pipe_fit1',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.make_pipe_fit2': ( 'utils/dummies.html#make_pipe_fit2',
                                                                                   'dsblocks/utils/dummies.py'),
                                        'dsblocks.utils.dummies.subtract_xy': ( 'utils/dummies.html#subtract_xy',
                                                                                'dsblocks/utils/dummies.py')},
            'dsblocks.utils.nbdev_utils': { 'dsblocks.utils.nbdev_utils.TestRunner': ( 'utils/nbdev_utils.html#testrunner',
                                                                                       'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.TestRunner.__init__': ( 'utils/nbdev_utils.html#testrunner.__init__',
                                                                                                'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.TestRunner.get_data': ( 'utils/nbdev_utils.html#testrunner.get_data',
                                                                                                'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.TestRunner.run': ( 'utils/nbdev_utils.html#testrunner.run',
                                                                                           'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils._script2notebook_nested_path': ( 'utils/nbdev_utils.html#_script2notebook_nested_path',
                                                                                                         'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.cd_root': ( 'utils/nbdev_utils.html#cd_root',
                                                                                    'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.get_test_and_library_folders': ( 'utils/nbdev_utils.html#get_test_and_library_folders',
                                                                                                         'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.md': ('utils/nbdev_utils.html#md', 'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.nbdev_build_all': ( 'utils/nbdev_utils.html#nbdev_build_all',
                                                                                            'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.nbdev_build_test': ( 'utils/nbdev_utils.html#nbdev_build_test',
                                                                                             'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.nbdev_setup': ( 'utils/nbdev_utils.html#nbdev_setup',
                                                                                        'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.nbdev_sync': ( 'utils/nbdev_utils.html#nbdev_sync',
                                                                                       'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.nbdev_update_all': ( 'utils/nbdev_utils.html#nbdev_update_all',
                                                                                             'dsblocks/utils/nbdev_utils.py'),
                                            'dsblocks.utils.nbdev_utils.replace_imports': ( 'utils/nbdev_utils.html#replace_imports',
                                                                                            'dsblocks/utils/nbdev_utils.py')},
            'dsblocks.utils.session': {'dsblocks.utils.session.load': ('utils/session.html#load', 'dsblocks/utils/session.py')},
            'dsblocks.utils.test_exporter': { 'dsblocks.utils.test_exporter.Freeze': ( 'utils/test_exporter.html#freeze',
                                                                                       'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.Freeze.__call__': ( 'utils/test_exporter.html#freeze.__call__',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.Freeze.__init__': ( 'utils/test_exporter.html#freeze.__init__',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.Outputs': ( 'utils/test_exporter.html#outputs',
                                                                                        'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.Outputs.__init__': ( 'utils/test_exporter.html#outputs.__init__',
                                                                                                 'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.Outputs._test_': ( 'utils/test_exporter.html#outputs._test_',
                                                                                               'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestExporter': ( 'utils/test_exporter.html#testexporter',
                                                                                             'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestExporter.__init__': ( 'utils/test_exporter.html#testexporter.__init__',
                                                                                                      'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestExporter._data_': ( 'utils/test_exporter.html#testexporter._data_',
                                                                                                    'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestExporter._import_': ( 'utils/test_exporter.html#testexporter._import_',
                                                                                                      'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestExporter._test_': ( 'utils/test_exporter.html#testexporter._test_',
                                                                                                    'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestMerger': ( 'utils/test_exporter.html#testmerger',
                                                                                           'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestMerger.__init__': ( 'utils/test_exporter.html#testmerger.__init__',
                                                                                                    'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestMerger._data_code_': ( 'utils/test_exporter.html#testmerger._data_code_',
                                                                                                       'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestMerger._import_': ( 'utils/test_exporter.html#testmerger._import_',
                                                                                                    'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.TestMerger._test_function_': ( 'utils/test_exporter.html#testmerger._test_function_',
                                                                                                           'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.UnFreeze': ( 'utils/test_exporter.html#unfreeze',
                                                                                         'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.UnFreeze.__call__': ( 'utils/test_exporter.html#unfreeze.__call__',
                                                                                                  'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.UnFreeze.__init__': ( 'utils/test_exporter.html#unfreeze.__init__',
                                                                                                  'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.add_function': ( 'utils/test_exporter.html#add_function',
                                                                                             'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.add_indent': ( 'utils/test_exporter.html#add_indent',
                                                                                           'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.add_no_run_import': ( 'utils/test_exporter.html#add_no_run_import',
                                                                                                  'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.apply_nb_processor': ( 'utils/test_exporter.html#apply_nb_processor',
                                                                                                   'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.build_test_nb': ( 'utils/test_exporter.html#build_test_nb',
                                                                                              'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.export_nb_tests': ( 'utils/test_exporter.html#export_nb_tests',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.extract_and_merge_outputs': ( 'utils/test_exporter.html#extract_and_merge_outputs',
                                                                                                          'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.extract_and_write_outputs': ( 'utils/test_exporter.html#extract_and_write_outputs',
                                                                                                          'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.extract_outputs': ( 'utils/test_exporter.html#extract_outputs',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.freeze_all': ( 'utils/test_exporter.html#freeze_all',
                                                                                           'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.freeze_script': ( 'utils/test_exporter.html#freeze_script',
                                                                                              'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.get_ipynb_paths': ( 'utils/test_exporter.html#get_ipynb_paths',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.merge_tests': ( 'utils/test_exporter.html#merge_tests',
                                                                                            'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.pars_args': ( 'utils/test_exporter.html#pars_args',
                                                                                          'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.pars_freeze': ( 'utils/test_exporter.html#pars_freeze',
                                                                                            'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.pars_unfreeze': ( 'utils/test_exporter.html#pars_unfreeze',
                                                                                              'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.replace_fn': ( 'utils/test_exporter.html#replace_fn',
                                                                                           'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.store_frozen': ( 'utils/test_exporter.html#store_frozen',
                                                                                             'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.store_unfrozen': ( 'utils/test_exporter.html#store_unfrozen',
                                                                                               'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.unfreeze_all': ( 'utils/test_exporter.html#unfreeze_all',
                                                                                             'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.unfreeze_script': ( 'utils/test_exporter.html#unfreeze_script',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.write_frozen_nb': ( 'utils/test_exporter.html#write_frozen_nb',
                                                                                                'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.write_test_nb': ( 'utils/test_exporter.html#write_test_nb',
                                                                                              'dsblocks/utils/test_exporter.py'),
                                              'dsblocks.utils.test_exporter.write_unfrozen_nb': ( 'utils/test_exporter.html#write_unfrozen_nb',
                                                                                                  'dsblocks/utils/test_exporter.py')},
            'dsblocks.utils.utils': { 'dsblocks.utils.utils._set_file_handler': ( 'utils/utils.html#_set_file_handler',
                                                                                  'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils._store_attr': ('utils/utils.html#_store_attr', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.add_commit_files': ( 'utils/utils.html#add_commit_files',
                                                                                 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.add_out_of_repo_files': ( 'utils/utils.html#add_out_of_repo_files',
                                                                                      'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.argnames': ('utils/utils.html#argnames', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.call_with_existing_kwargs': ( 'utils/utils.html#call_with_existing_kwargs',
                                                                                          'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.check_last_part': ( 'utils/utils.html#check_last_part',
                                                                                'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.check_message': ('utils/utils.html#check_message', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.check_new_files': ( 'utils/utils.html#check_new_files',
                                                                                'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.compare_last_part': ( 'utils/utils.html#compare_last_part',
                                                                                  'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.delete_logger': ('utils/utils.html#delete_logger', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_action': ('utils/utils.html#get_action', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_calling_modules': ( 'utils/utils.html#get_calling_modules',
                                                                                    'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_existing_kwargs': ( 'utils/utils.html#get_existing_kwargs',
                                                                                    'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_hierarchy_level': ( 'utils/utils.html#get_hierarchy_level',
                                                                                    'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_logging_level': ( 'utils/utils.html#get_logging_level',
                                                                                  'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_norun': ('utils/utils.html#get_norun', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_specific_dict_param': ( 'utils/utils.html#get_specific_dict_param',
                                                                                        'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.get_top_function': ( 'utils/utils.html#get_top_function',
                                                                                 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.json_dump': ('utils/utils.html#json_dump', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.json_load': ('utils/utils.html#json_load', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.make_reproducible': ( 'utils/utils.html#make_reproducible',
                                                                                  'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.obtain_class_specific_attrs': ( 'utils/utils.html#obtain_class_specific_attrs',
                                                                                            'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.remove_previous_results': ( 'utils/utils.html#remove_previous_results',
                                                                                        'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.replace_attr_and_store': ( 'utils/utils.html#replace_attr_and_store',
                                                                                       'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.save_config': ('utils/utils.html#save_config', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.set_empty_logger': ( 'utils/utils.html#set_empty_logger',
                                                                                 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.set_logger': ('utils/utils.html#set_logger', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.set_tf_loglevel': ( 'utils/utils.html#set_tf_loglevel',
                                                                                'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.set_verbosity': ('utils/utils.html#set_verbosity', 'dsblocks/utils/utils.py'),
                                      'dsblocks.utils.utils.store_attr': ('utils/utils.html#store_attr', 'dsblocks/utils/utils.py')}}}
