# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import securedexchange_pb2 as securedexchange__pb2


class ExchangeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendModel = channel.stream_unary(
                '/securedexchange.Exchange/SendModel',
                request_serializer=securedexchange__pb2.SendModelRequest.SerializeToString,
                response_deserializer=securedexchange__pb2.SendModelReply.FromString,
                )
        self.RunModel = channel.stream_unary(
                '/securedexchange.Exchange/RunModel',
                request_serializer=securedexchange__pb2.RunModelRequest.SerializeToString,
                response_deserializer=securedexchange__pb2.RunModelReply.FromString,
                )
        self.DeleteModel = channel.unary_unary(
                '/securedexchange.Exchange/DeleteModel',
                request_serializer=securedexchange__pb2.DeleteModelRequest.SerializeToString,
                response_deserializer=securedexchange__pb2.DeleteModelReply.FromString,
                )


class ExchangeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendModel(self, request_iterator, context):
        """Upload a model to the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunModel(self, request_iterator, context):
        """Run an existing model to the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExchangeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendModel': grpc.stream_unary_rpc_method_handler(
                    servicer.SendModel,
                    request_deserializer=securedexchange__pb2.SendModelRequest.FromString,
                    response_serializer=securedexchange__pb2.SendModelReply.SerializeToString,
            ),
            'RunModel': grpc.stream_unary_rpc_method_handler(
                    servicer.RunModel,
                    request_deserializer=securedexchange__pb2.RunModelRequest.FromString,
                    response_serializer=securedexchange__pb2.RunModelReply.SerializeToString,
            ),
            'DeleteModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModel,
                    request_deserializer=securedexchange__pb2.DeleteModelRequest.FromString,
                    response_serializer=securedexchange__pb2.DeleteModelReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'securedexchange.Exchange', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Exchange(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendModel(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/securedexchange.Exchange/SendModel',
            securedexchange__pb2.SendModelRequest.SerializeToString,
            securedexchange__pb2.SendModelReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunModel(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/securedexchange.Exchange/RunModel',
            securedexchange__pb2.RunModelRequest.SerializeToString,
            securedexchange__pb2.RunModelReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/securedexchange.Exchange/DeleteModel',
            securedexchange__pb2.DeleteModelRequest.SerializeToString,
            securedexchange__pb2.DeleteModelReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
