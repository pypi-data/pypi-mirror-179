import{d as v,a as k,C as D,u as b,n as B,c as p,b as F,g as t,o as x,e as S,w as d,f as i,an as T,ao as N,i as V,ap as q,aq as z,z as y,ac as f}from"./index.ae12d5bb.js";import{u as I}from"./usePageTitle.85501b5e.js";const Y=v({__name:"FlowRunCreate",setup(M){const u=k(),a=D("id"),n=b(),w=B(u.deployments.getDeployment,[a]),e=p(()=>w.response),_=async s=>{var r,o,c;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),m=(c=(o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)!=null?c:void 0,g=!m,h=q(z,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:g,startTime:m});f(h,"success"),n.push(y.deployment(a.value))}catch(l){f("Something went wrong trying to create a flow run","error"),console.error(l)}},C=()=>{n.back()},R=p(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return I(R),(s,r)=>{const o=F("p-layout-default");return t(e)?(x(),S(o,{key:0},{header:d(()=>[i(t(T),{deployment:t(e)},null,8,["deployment"])]),default:d(()=>[i(t(N),{deployment:t(e),onSubmit:_,onCancel:C},null,8,["deployment"])]),_:1})):V("",!0)}}});export{Y as default};
