Metadata-Version: 2.1
Name: pyfeyn2
Version: 2.0.0
Summary: PyFeyn is a package which makes drawing Feynman diagrams simple and programmatic.  Feynman diagrams are important constructs in perturbative field theory, so being able to draw them in a programmatic fashion is important if attempting to enumerate a large number of diagram configurations is important. The output quality of PyFeyn diagrams (into PDF or EPS formats) is very high, and special effects can be obtained by using constructs from PyX, which PyFeyn is based around
Author: Alexander Puck Neuwirth
Author-email: alexander@neuwirth-informatik.de
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Provides-Extra: dev
Provides-Extra: docs
Requires-Dist: Sphinx; extra == "docs"
Requires-Dist: Wand
Requires-Dist: dot2tex
Requires-Dist: ipython; extra == "dev"
Requires-Dist: jupyter-sphinx; extra == "docs"
Requires-Dist: jupyterlab; extra == "dev"
Requires-Dist: matplotlib
Requires-Dist: nbsphinx; extra == "docs"
Requires-Dist: numpy
Requires-Dist: particle
Requires-Dist: pydot
Requires-Dist: pylatex
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-line-profiler-apn (>=0.1.3); extra == "dev"
Requires-Dist: pytest-profiling; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pyx (>=0.12)
Requires-Dist: sphinx-autoapi; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Requires-Dist: sphinx_autobuild; extra == "docs"
Requires-Dist: sphinx_math_dollar; extra == "docs"
Requires-Dist: sphinxcontrib-napoleon; extra == "docs"
Requires-Dist: xsdata[cli,lxml,soap]
Description-Content-Type: text/markdown

# PyFeyn2

Forked from https://pyfeyn.hepforge.org/

## Dependencies

* libmagickwand-dev
* latexmk

## Installation

```sh
poerty install --extras docs --extras dev
poetry shell
```

## Development


### package/python structure:

* https://mathspp.com/blog/how-to-create-a-python-package-in-2022
* https://www.brainsorting.com/posts/publish-a-package-on-pypi-using-poetry/

