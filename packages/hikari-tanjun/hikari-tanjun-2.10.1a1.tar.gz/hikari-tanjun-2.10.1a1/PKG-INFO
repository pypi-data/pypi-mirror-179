Metadata-Version: 2.1
Name: hikari-tanjun
Version: 2.10.1a1
Summary: A flexible command framework designed to extend Hikari.
Keywords: hikari
Author-email: Faster Speeding <lucina@lmbyrne.dev>
Requires-Python: >=3.9.0,<3.12
Description-Content-Type: text/markdown
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Dist: alluka~=0.1.2
Requires-Dist: hikari~=2.0.0.dev112
Project-URL: Changelog, https://github.com/FasterSpeeding/tanjun/blob/master/CHANGELOG.md
Project-URL: Documentation, https://tanjun.cursed.solutions/
Project-URL: Homepage, https://github.com/FasterSpeeding/Tanjun
Project-URL: Repository, https://github.com/FasterSpeeding/Tanjun

# Tanjun

A flexible command framework designed to extend Hikari.

# Installation

You can install Tanjun from PyPI using the following command in any Python 3.9 or above environment.

```
python -m pip install -U hikari-tanjun
```

# Quick Usage

For usage see the [documentation](https://tanjun.cursed.solutions/)
and the [examples](https://github.com/FasterSpeeding/Tanjun/tree/master/examples)
or [tutorials and articles](https://patchwork.systems/programming/hikari-discord-bot/index.html)
and the [usage guide](https://tanjun.cursed.solutions/usage/).

# Community Resources

* An alternative implementation of command signature parsing for slash commands (which relies more
  on documentation parsing) can be found at <https://github.com/thesadru/tanchi>.
* Redis based implementations of the async cache dependency can be found in
  [hikari-sake](https://github.com/FasterSpeeding/Sake) \>=v1.0.1a1 (exposed by
  [sake.redis.ResourceClient.add_to_tanjun][]).

# Support

[Hikari's support guild](https://discord.gg/hikari) provides for support for Tanjun.

# Contributing

Before contributing you should read through the
[contributing guidelines](https://github.com/FasterSpeeding/Tanjun/blob/master/CONTRIBUTING.md) and
the [code of conduct](https://github.com/FasterSpeeding/Tanjun/blob/master/CODE_OF_CONDUCT.md)

