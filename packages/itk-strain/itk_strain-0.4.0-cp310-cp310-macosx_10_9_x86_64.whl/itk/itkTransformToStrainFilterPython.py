# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _StrainPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTransformToStrainFilterPython
else:
    import _itkTransformToStrainFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTransformToStrainFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTransformToStrainFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkTransformBasePython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkArray2DPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkVariableLengthVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkGenerateImageSourcePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython

def itkTransformToStrainFilterTD22DD_New():
    return itkTransformToStrainFilterTD22DD.New()

class itkTransformToStrainFilterTD22DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD22):
    r"""Proxy of C++ itkTransformToStrainFilterTD22DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD22DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD22DD

        Create a new object of the class itkTransformToStrainFilterTD22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD22DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD22DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD22DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD22DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_swigregister(itkTransformToStrainFilterTD22DD)
itkTransformToStrainFilterTD22DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD___New_orig__
itkTransformToStrainFilterTD22DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD22DD_cast


def itkTransformToStrainFilterTD23DD_New():
    return itkTransformToStrainFilterTD23DD.New()

class itkTransformToStrainFilterTD23DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD22):
    r"""Proxy of C++ itkTransformToStrainFilterTD23DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD23DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD23DD

        Create a new object of the class itkTransformToStrainFilterTD23DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD23DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD23DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD23DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD23DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_swigregister(itkTransformToStrainFilterTD23DD)
itkTransformToStrainFilterTD23DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD___New_orig__
itkTransformToStrainFilterTD23DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD23DD_cast


def itkTransformToStrainFilterTD24DD_New():
    return itkTransformToStrainFilterTD24DD.New()

class itkTransformToStrainFilterTD24DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD22):
    r"""Proxy of C++ itkTransformToStrainFilterTD24DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD24DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD24DD

        Create a new object of the class itkTransformToStrainFilterTD24DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD24DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD24DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD24DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD24DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_swigregister(itkTransformToStrainFilterTD24DD)
itkTransformToStrainFilterTD24DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD___New_orig__
itkTransformToStrainFilterTD24DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD24DD_cast


def itkTransformToStrainFilterTD32DD_New():
    return itkTransformToStrainFilterTD32DD.New()

class itkTransformToStrainFilterTD32DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD33):
    r"""Proxy of C++ itkTransformToStrainFilterTD32DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD32DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD32DD

        Create a new object of the class itkTransformToStrainFilterTD32DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD32DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD32DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD32DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD32DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_swigregister(itkTransformToStrainFilterTD32DD)
itkTransformToStrainFilterTD32DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD___New_orig__
itkTransformToStrainFilterTD32DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD32DD_cast


def itkTransformToStrainFilterTD33DD_New():
    return itkTransformToStrainFilterTD33DD.New()

class itkTransformToStrainFilterTD33DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD33):
    r"""Proxy of C++ itkTransformToStrainFilterTD33DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD33DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD33DD

        Create a new object of the class itkTransformToStrainFilterTD33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD33DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD33DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD33DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD33DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_swigregister(itkTransformToStrainFilterTD33DD)
itkTransformToStrainFilterTD33DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD___New_orig__
itkTransformToStrainFilterTD33DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD33DD_cast


def itkTransformToStrainFilterTD34DD_New():
    return itkTransformToStrainFilterTD34DD.New()

class itkTransformToStrainFilterTD34DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD33):
    r"""Proxy of C++ itkTransformToStrainFilterTD34DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD34DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD34DD

        Create a new object of the class itkTransformToStrainFilterTD34DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD34DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD34DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD34DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD34DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_swigregister(itkTransformToStrainFilterTD34DD)
itkTransformToStrainFilterTD34DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD___New_orig__
itkTransformToStrainFilterTD34DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD34DD_cast


def itkTransformToStrainFilterTD42DD_New():
    return itkTransformToStrainFilterTD42DD.New()

class itkTransformToStrainFilterTD42DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD44):
    r"""Proxy of C++ itkTransformToStrainFilterTD42DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD42DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD42DD

        Create a new object of the class itkTransformToStrainFilterTD42DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD42DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD42DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD42DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD42DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_swigregister(itkTransformToStrainFilterTD42DD)
itkTransformToStrainFilterTD42DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD___New_orig__
itkTransformToStrainFilterTD42DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD42DD_cast


def itkTransformToStrainFilterTD43DD_New():
    return itkTransformToStrainFilterTD43DD.New()

class itkTransformToStrainFilterTD43DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD44):
    r"""Proxy of C++ itkTransformToStrainFilterTD43DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD43DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD43DD

        Create a new object of the class itkTransformToStrainFilterTD43DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD43DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD43DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD43DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD43DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_swigregister(itkTransformToStrainFilterTD43DD)
itkTransformToStrainFilterTD43DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD___New_orig__
itkTransformToStrainFilterTD43DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD43DD_cast


def itkTransformToStrainFilterTD44DD_New():
    return itkTransformToStrainFilterTD44DD.New()

class itkTransformToStrainFilterTD44DD(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTD44):
    r"""Proxy of C++ itkTransformToStrainFilterTD44DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTD44DD
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTD44DD

        Create a new object of the class itkTransformToStrainFilterTD44DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTD44DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTD44DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTD44DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTD44DD in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_swigregister(itkTransformToStrainFilterTD44DD)
itkTransformToStrainFilterTD44DD___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD___New_orig__
itkTransformToStrainFilterTD44DD_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTD44DD_cast


def itkTransformToStrainFilterTF22FF_New():
    return itkTransformToStrainFilterTF22FF.New()

class itkTransformToStrainFilterTF22FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF22):
    r"""Proxy of C++ itkTransformToStrainFilterTF22FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF22FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF22FF

        Create a new object of the class itkTransformToStrainFilterTF22FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF22FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF22FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF22FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF22FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_swigregister(itkTransformToStrainFilterTF22FF)
itkTransformToStrainFilterTF22FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF___New_orig__
itkTransformToStrainFilterTF22FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF22FF_cast


def itkTransformToStrainFilterTF23FF_New():
    return itkTransformToStrainFilterTF23FF.New()

class itkTransformToStrainFilterTF23FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF22):
    r"""Proxy of C++ itkTransformToStrainFilterTF23FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF23FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF23FF

        Create a new object of the class itkTransformToStrainFilterTF23FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF23FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF23FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF23FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF23FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_swigregister(itkTransformToStrainFilterTF23FF)
itkTransformToStrainFilterTF23FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF___New_orig__
itkTransformToStrainFilterTF23FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF23FF_cast


def itkTransformToStrainFilterTF24FF_New():
    return itkTransformToStrainFilterTF24FF.New()

class itkTransformToStrainFilterTF24FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF22):
    r"""Proxy of C++ itkTransformToStrainFilterTF24FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF24FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF24FF

        Create a new object of the class itkTransformToStrainFilterTF24FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF24FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF24FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF24FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF24FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_swigregister(itkTransformToStrainFilterTF24FF)
itkTransformToStrainFilterTF24FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF___New_orig__
itkTransformToStrainFilterTF24FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF24FF_cast


def itkTransformToStrainFilterTF32FF_New():
    return itkTransformToStrainFilterTF32FF.New()

class itkTransformToStrainFilterTF32FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF33):
    r"""Proxy of C++ itkTransformToStrainFilterTF32FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF32FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF32FF

        Create a new object of the class itkTransformToStrainFilterTF32FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF32FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF32FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF32FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF32FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_swigregister(itkTransformToStrainFilterTF32FF)
itkTransformToStrainFilterTF32FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF___New_orig__
itkTransformToStrainFilterTF32FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF32FF_cast


def itkTransformToStrainFilterTF33FF_New():
    return itkTransformToStrainFilterTF33FF.New()

class itkTransformToStrainFilterTF33FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF33):
    r"""Proxy of C++ itkTransformToStrainFilterTF33FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF33FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF33FF

        Create a new object of the class itkTransformToStrainFilterTF33FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF33FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF33FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF33FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF33FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_swigregister(itkTransformToStrainFilterTF33FF)
itkTransformToStrainFilterTF33FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF___New_orig__
itkTransformToStrainFilterTF33FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF33FF_cast


def itkTransformToStrainFilterTF34FF_New():
    return itkTransformToStrainFilterTF34FF.New()

class itkTransformToStrainFilterTF34FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF33):
    r"""Proxy of C++ itkTransformToStrainFilterTF34FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF34FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF34FF

        Create a new object of the class itkTransformToStrainFilterTF34FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF34FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF34FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF34FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF34FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_swigregister(itkTransformToStrainFilterTF34FF)
itkTransformToStrainFilterTF34FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF___New_orig__
itkTransformToStrainFilterTF34FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF34FF_cast


def itkTransformToStrainFilterTF42FF_New():
    return itkTransformToStrainFilterTF42FF.New()

class itkTransformToStrainFilterTF42FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF44):
    r"""Proxy of C++ itkTransformToStrainFilterTF42FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF42FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF42FF

        Create a new object of the class itkTransformToStrainFilterTF42FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF42FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF42FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF42FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF42FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_swigregister(itkTransformToStrainFilterTF42FF)
itkTransformToStrainFilterTF42FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF___New_orig__
itkTransformToStrainFilterTF42FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF42FF_cast


def itkTransformToStrainFilterTF43FF_New():
    return itkTransformToStrainFilterTF43FF.New()

class itkTransformToStrainFilterTF43FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF44):
    r"""Proxy of C++ itkTransformToStrainFilterTF43FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF43FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF43FF

        Create a new object of the class itkTransformToStrainFilterTF43FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF43FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF43FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF43FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF43FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_swigregister(itkTransformToStrainFilterTF43FF)
itkTransformToStrainFilterTF43FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF___New_orig__
itkTransformToStrainFilterTF43FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF43FF_cast


def itkTransformToStrainFilterTF44FF_New():
    return itkTransformToStrainFilterTF44FF.New()

class itkTransformToStrainFilterTF44FF(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISSRTF44):
    r"""Proxy of C++ itkTransformToStrainFilterTF44FF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_Clone)
    SetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_GetTransform)
    StrainFormType_INFINITESIMAL = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_StrainFormType_INFINITESIMAL
    
    StrainFormType_GREENLAGRANGIAN = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_StrainFormType_GREENLAGRANGIAN
    
    StrainFormType_EULERIANALMANSI = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_StrainFormType_EULERIANALMANSI
    
    SetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_SetStrainForm)
    GetStrainForm = _swig_new_instance_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_GetStrainForm)
    __swig_destroy__ = _itkTransformToStrainFilterPython.delete_itkTransformToStrainFilterTF44FF
    cast = _swig_new_static_method(_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToStrainFilterTF44FF

        Create a new object of the class itkTransformToStrainFilterTF44FF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToStrainFilterTF44FF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToStrainFilterTF44FF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToStrainFilterTF44FF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToStrainFilterTF44FF in _itkTransformToStrainFilterPython:
_itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_swigregister(itkTransformToStrainFilterTF44FF)
itkTransformToStrainFilterTF44FF___New_orig__ = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF___New_orig__
itkTransformToStrainFilterTF44FF_cast = _itkTransformToStrainFilterPython.itkTransformToStrainFilterTF44FF_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def transform_to_strain_filter(*args,  transform_input=..., transform: itkt.Transform=..., strain_form=..., use_reference_image: bool=..., size: Sequence[int]=..., spacing: Sequence[float]=..., origin: Sequence[float]=..., direction=..., start_index: Sequence[int]=..., output_parameters_from_image: itkt.ImageBase=..., reference_image: itkt.ImageBase=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TransformToStrainFilter"""
    import itk

    kwarg_typehints = { 'transform_input':transform_input,'transform':transform,'strain_form':strain_form,'use_reference_image':use_reference_image,'size':size,'spacing':spacing,'origin':origin,'direction':direction,'start_index':start_index,'output_parameters_from_image':output_parameters_from_image,'reference_image':reference_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.TransformToStrainFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def transform_to_strain_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Strain.TransformToStrainFilter
    transform_to_strain_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    transform_to_strain_filter.__doc__ = filter_object.__doc__




